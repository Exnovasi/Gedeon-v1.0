{"version":3,"sources":["app/js/main.js","app/js/ConfigController.js","app/js/ProjectsController.js","app/js/StartController.js","app/js/UsersController.js","app/js/auditController.js","app/js/directives.js","app/js/homeController.js","app/js/loginController.js"],"names":[],"mappingsrplbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;CCvzlHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;CCpfile":"public\\js\\app.js","sourcesContent":["var Gedeon = angular.module(\"Gedeon\",['ngImgCrop',\"ui.router\",\"ngRoute\",\"ngMaterial\",'ui.bootstrap','ngTagsInput'], function($interpolateProvider) {\n\t$interpolateProvider.startSymbol('[[');\n\t$interpolateProvider.endSymbol(']]');\n\n})\n\n\n.config(function($routeProvider,$locationProvider,$stateProvider, $urlRouterProvider){\n\n\t$urlRouterProvider.otherwise('/');\n\n\t$stateProvider\n        \n        // HOME STATES AND NESTED VIEWS ========================================\n        .state('login', {\n            url: '/',\n            controller:\"LoginCtrl\",\n\t\t\ttemplateUrl: \"views/login.html\",\n        })\n        .state('home', {\n            url: '/home',\n           \tcontroller:\"HomeCtrl\",\n\t\t\ttemplateUrl: \"views/home.html\"\n        })\n        .state('home.start', {\n            url: '/start',\n           \tcontroller:\"StartCtrl\",\n\t\t\ttemplateUrl: \"views/common/start.html\"\n        })\n        .state('home.users', {\n            url: '/users',\n           \tcontroller:\"UsersCtrl\",\n\t\t\ttemplateUrl: \"views/common/users.html\"\n        })\n        .state('home.config', {\n            url: '/config',\n           \tcontroller:\"ConfigCtrl\",\n\t\t\ttemplateUrl: \"views/common/config.html\"\n        })\n        .state('home.projects', {\n            url: '/projects',\n           \tcontroller:\"ProjectsCtrl\",\n\t\t\ttemplateUrl: \"views/common/projects_module.html\"\n        })\n        .state('home.audit', {\n            url: '/audit',\n           \tcontroller:\"AuditCtrl\",\n\t\t\ttemplateUrl: \"views/common/audit.html\"\n        })/*\n        .state('verify', {\n            url: '/verify_account/:n/{c:.*}',\n           \tcontroller:\"VerifyCtrl\",\n\t\t\ttemplateUrl: \"views/auth/verify.blade.php\"\n        })\n        */\n})\n\n\n\n.run(function($rootScope,$location,$http) {\n\n\n\t$rootScope.goTo = function(url){\n\n\t\t$location.path(url);\n\t}\n\n\n\t$rootScope.$on('$stateChangeSuccess', function() {\n\t\t$rootScope.actualMenu = false;\n\t\t$('html, body').animate({ scrollTop: $('html').offset().top }, 0);\n\n\t\t$rootScope.rootCheckUrl = function(url){\n\t\t\t$rootScope.checkUrl = true;\n\t\t\teval('$http.get('+'\"'+url+'\"'+',[\"\"])')\n\t\t    .success(function(data)\n\t\t    {\t\n\t\t    \t\n\t\t    \tif(data['error']){\n\t\t\t\t\t$location.path( \"/home/start\" );\n\t\t\t\t}else{\n\n\t\t\t\t}\n\n\t\t\t\t$rootScope.checkUrl = null;\n\t\t\t\t$rootScope.loadOK = true\n\n\t\t    })\n\t\t    .error(function(data)\n\t\t    {\n\t\t    \t$location.path( \"/home/start\" );\n\t\t    });\n\t    }\n\n\n    });\n\n\n})\n\n\n","angular.module(\"Gedeon\")\n.controller('ConfigCtrl',function($scope,$rootScope,$http,$location,$state,fileUpload,$modal){\n\n\t$rootScope.actualMenu = 'config';\n\t$rootScope.rootCheckUrl('viewDependences');\n\t$scope.wait = false;\n\n\t//funcion para acceder a un valor desde la vista cuando el 2waydatabinding falla\n    $rootScope.viewDataBind = function(data){\n\n\t\treturn eval('$scope.'+ data);\n\t\t//return 10;\n\n\t}\n\n\t//funcion para acceder a un valor desde la vista cuando el 2waydatabinding falla\n    $rootScope.changeDataBind = function(data,val){\n\n\t\t\t$scope.$eval(data +' = ' + val);\n\n    \tconsole.log(eval('$scope.'+ data));\n\n\t}\n\n    // *****************************************************************************\n\t// DEPENDENCIAS\n\t// *****************************************************************************\n\t$scope.dependenceForm = {\n\n\t\tname: '',\n\t}\n\n\t$scope.dependences = []\n\n\t$scope.selectedTabDep = 0;\n\t$scope.selectedIndex = 2;\n    //muestra todas las dependencias creadas\n\t$scope.waitLoad = true;\n\t$scope.waitDelete = false;\n\t$http.get('viewDependences', [''])\n    .success(function(data)\n    {\t\n    \t\n    \tif(data['error']){\n\n\t\t\t$location.reload();\n\n\t\t}else{\n\n\t\t\t$scope.dependences= data\n\n\t\t}\n\n\t\t$scope.waitLoad = false;\n\n    })\n    .error(function(data)\n    {\n    \t$location.reload();\n    });\n\n    //oculta los alert de mensajes\n    $scope.dismissAlert = function(){\n\n\t\t$scope.createMessage = false;\n\t\t$scope.createSuccess = false;\t\t\n\n\t}\n\n\n\t//funcion que crea una nueva dependencia\n\t$scope.createDependence = function(){\n\n\t\t$scope.waitCreate = true;\n\t\t$scope.createMessage = null;\n\t\t$scope.createSuccess = false;\n\t\t\n        //peticion al servidor usando http\n        $http.post('createDependence', $scope.dependenceForm)\n        .success(function(data)\n        {\t\n        \t\n        \tif(data['error']){\n        \t\t$scope.createMessage = [data['error']]\n    \t\t}else if(data['success']){\n    \t\t\t$scope.createMessage = false;\n    \t\t\t$scope.dependences.push(data['success']);\n    \t\t\t$scope.createSuccess = \"La dependencia se creo con Exito!\";\n    \t\t\t$scope.dependenceForm = {\n\t\t\t\t\tname: '',\n\t\t\t\t}\n    \t\t}\n\n    \t\t$scope.waitCreate = false\n\n        })\n        .error(function(data)\n        {\n        \t$scope.createMessage = [];\n\t\t\tfor(var m in data) {\n\t\t\t   $scope.createMessage.push(data[m][0]);\n\t\t\t}\n\t\t\t\n        \t$scope.waitCreate = false\n        });       \n\t};\n\n\t//funcion que envia la peticion para edita una dependencia\n\t$scope.editDependences = function(){\n\n\t\t$scope.waitEdit = true;\n\t\t$scope.createMessage = false;\n\t\t$scope.createSuccess = false;\n        \n        //peticion al servidor usando http\n        $http.post('editDependence', $scope.dependenceForm)\n        .success(function(data)\n        {\t\n        \t\n        \tif(data['error']){\n        \t\t$scope.createMessage = [data['error']]\n    \t\t}else if(data['success']){\n    \t\t\t$scope.createMessage = false;\n    \t\t\t$scope.detectChanges = false;\n    \t\t\tangular.copy($scope.dependenceForm,$scope.dependences[$scope.dependences.indexOf($scope.dependenceFormAux)])\n    \t\t\t$scope.createSuccess = \"La dependencia se edito con Exito!\";\n    \t\t\t\n    \t\t}\n\n    \t\t$scope.waitEdit = false\n\n        })\n        .error(function(data)\n        {\n        \t$scope.createSuccess = false\n        \t$scope.createMessage = [];\n\t\t\tfor(var m in data) {\n\t\t\t   $scope.createMessage.push(data[m][0]);\n\t\t\t}\n\t\t\t\n        \t$scope.waitEdit = false\n        });             \n        \n\t};\n\n\t//cargar el formulario de edicion de dependencias\n\t$scope.loadDependenceForm = function(dependence){\n\n\t\tdelete $scope.detectChanges;\n\t\t$scope.dependenceFormAux = dependence;\n\t\tangular.copy(dependence,$scope.dependenceForm);\n\t\t$scope.createMessage = false;\n\t\t$scope.createSuccess = false;\t\t\n\t\t$scope.selectedTabDep = 1\n\n\t}\n\n\t//cancela la edicion de dependencias\n\t$scope.cancelEditDependence = function(){\n\n\t\t$scope.dependenceForm = {\n\t\t\tname: ''\n\t\t}\n\t\t$scope.selectedTabDep = 0;\n\t\tdelete $scope.detectChanges;\n\t\t$scope.createMessage = false;\n\t\t$scope.createSuccess = false;\n\t}\n\n\t\n\t//funcion que pregunta el password para eliminar una dependencia\n\t$scope.confirmDeleteDependence = function(dependence){\n\n\t\t$scope.waitDelete = dependence;\n\t\t$scope.popupText= 'Para eliminar por favor ingrese su password:';\n\t\tdependence.deletePassword = ''\n\n\t};\n\n\t//funcion que cancela la eliminacion de dependencia\n\t$scope.closeWaitDelete = function(dependence){\n\n\t\t$scope.waitDelete = false;\n\t\tdependence.deletePassword = ''\n\n\t};\n\n\n\t//funcion que envia la peticion para eliminar una dependencia \n\t$scope.deleteDependence = function(dependence){\n\n\t\tconsole.log(dependence);\n\t\t$scope.waitDeleteDependence = true;\n\t    //peticion al servidor usando http\n\t    $http.post('deleteDependence', dependence)\n\t    .success(function(data)\n\t    {\t\n\t    \t\n\t    \tif(data['error']){\n\t    \t\t$scope.popupText= data['error'];\n\t\t\t}else if(data['success']){\n\t\t\t\t$scope.dependences.splice($scope.dependences.indexOf(dependence), 1);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t$scope.waitDeleteDependence = false;\n\n\n\t    })\n\t    .error(function(data)\n\t    {\n\t    \t$location.reload();\t    \t\n\t    });             \n        \n\t};\n\n\t// *****************************************************************************\n\t// PLAN DE DESARROLLO\n\t// *****************************************************************************\n\t//funcion que abre el modal para editar el avatar \n\n\t$scope.devPlanForm = {\n\n\t\timage: 'img/Gedeon-Logo.jpg',\n\t\ttitle: '',\n\t\tdescription: ''\n\t}\n\n\t$scope.waitEditDevPlan = true;\n    //peticion al servidor para cargar la informacion del plan de desarrollo\n    $http.get('viewDevelopmentPlan',[''])\n    .success(function(data)\n    {\t\n    \t\n    \tif(data['error']){\n    \t\t$scope.editDPMessage = [\"No se pudo completar la operación\"]\n\t\t}else{\n\t\t\t$scope.devPlanForm = data;\n\t\t};\n\n\t\t$scope.waitEditDevPlan = false\n    })\n    .error(function(data)\n    {\t\n    \t$scope.editDPMessage = [];\n\t\tfor(var m in data) {\n\t\t   $scope.editDPMessage.push(data[m][0]);\n\t\t}\n    \t$scope.processing = false\n    });\n\n\n\t$scope.openModal = function(){\n\n\t\tvar modalInstance = $modal.open({\n\t        animation: true,\n\t        templateUrl: 'views/common/modal_edit_avatar.html',\n\t        backdrop: 'static',\n\t        controller: 'ModalDPlanImgCtrl',\n\t        resolve: {\n\t\t      \tdevplan: function () {\n\t\t          return $scope.devPlanForm;\n\t\t        }\n\t        }\n\n     \t});\n\n\n     \t$scope.imageCropResult = null;\n\t    $scope.showImageCropper = true;\n\n\t    $scope.$watch('imageCropResult', function(newVal) {\n\t        if (newVal) {\n\t        }\n\t    });\n\n\t    modalInstance.result.then(function (devplan) {\n\t      $scope.devPlanForm = devplan;\n\t    });\t\t\n    };\n\n    //funcion que carga la imagen en el formulario de creación\n\t$scope.editDevPlan = function(){\n\t\tconsole.log($scope.devPlanForm);\n\t\t$scope.waitEditDevPlan = true\n\t    //peticion al servidor para cargar la informacion de perfil del usuario logueado\n\t    $http.post('createDevelopmentPlan',$scope.devPlanForm)\n\t    .success(function(data)\n\t    {\t\n\t    \t\n\t    \tif(data['error']){\n\t    \t\t$scope.editDPMessage = [\"No se pudo completar la operación\"]\n\t\t\t}else{\n\t\t\t\t$scope.editDPSuccess = \t\"La información se actualizo con éxito!\"\n\t\t\t};\n\n\t\t\t$scope.waitEditDevPlan = false\n\t    })\n\t    .error(function(data)\n\t    {\t\n\t    \t$scope.editDPMessage = [];\n\t\t\tfor(var m in data) {\n\t\t\t   $scope.editDPMessage.push(data[m][0]);\n\t\t\t}\n\t    \t$scope.waitEditDevPlan = false\n\t    });\n    };\n\n    // *****************************************************************************\n\t// LINEAS\n\t// *****************************************************************************\n\t$scope.lineForm = {\n\n\t\tname: '',\n\t\tobjective: '',\n\t\tweight: 0\n\t}\n\n\t$scope.lines = []\n\n\t$scope.countLinesWeight = function(){\n\n\t\t$scope.totalLinesWeight = 100;\n\t\t$scope.lines.forEach(function(line){\n\t\t\t$scope.totalLinesWeight -= line.weight;\n\t\t});\n \t}\n\n\t$scope.selectedTabLines = 0;\n    //muetras todas las lineas creadas\n\t$scope.waitLoadLines = true;\n\t$scope.waitDeleteLine = null;\n\t$http.get('viewLines', [''])\n    .success(function(data)\n    {\t\n    \t\n    \tif(data['error']){\n\n\t\t\t$location.reload();\n\t\t}else{\n\n\t\t\t$scope.lines= data\n    \t\t$scope.countLinesWeight();\n\t\t}\n\n\t\t$scope.waitLoadLines = false;\n\n    })\n    .error(function(data)\n    {\n    \t$state.go('home.config');\n\n    });\n\n\n\n    $scope.$watch('lineForm.weight', function(newVal, oldVal) {\n\n       if (newVal && $scope.lineFormAux) {\n\n\t    \tif (newVal != $scope.lineFormAux.weight) {\n\t    \t\t$scope.detectchangesLine = true;\n    \t\t}else{\n    \t\t\t$scope.detectchangesLine = false;\n    \t\t}\n\n    \t}else {\n    \t\t$scope.detectchangesLine = false;\n    \t}\n   });\n\n    //oculta los alert de mensajes\n    $scope.dismissAlertLines = function(){\n\n\t\t$scope.createMessageLines = false;\n\t\t$scope.createSuccessLines = false;\t\t\n\n\t}\n\n\t//funcion que crea una nueva dependencia\n\t$scope.createLine = function(){\n\n\t\t$scope.waitCreateLine = true;\n\t\t$scope.createMessageLines = null;\n\t\t$scope.createSuccessLines = false;\n\t\t\n        //peticion al servidor usando http\n        $http.post('createLine', $scope.lineForm)\n        .success(function(data)\n        {\t\n        \t\n        \tif(data['error']){\n        \t\t$scope.createMessageLines = [data['error']]\n    \t\t}else if(data['success']){\n    \t\t\t$scope.createMessageLines = false;\n    \t\t\t$scope.lines.push(data['success']);\n    \t\t\t$scope.createSuccessLines = \"La línea se creo con Exito!\";\n    \t\t\t$scope.countLinesWeight();\n    \t\t\t$scope.lineForm = {\n\n\t\t\t\t\tname: '',\n\t\t\t\t\tobjective: '',\n\t\t\t\t\tweight: 0\n\t\t\t\t}\n    \t\t}\n\n    \t\t$scope.waitCreateLine = false\n\n        })\n        .error(function(data)\n        {\n        \t$scope.createMessageLines = [];\n\t\t\tfor(var m in data) {\n\t\t\t   $scope.createMessageLines.push(data[m][0]);\n\t\t\t}\n\t\t\t\n        \t$scope.waitCreateLine = false\n        });       \n\t};\n\n\t//funcion que envia la peticion para edita una linea\n\t$scope.editLines = function(){\n\n\t\t$scope.waitCreateLine = true;\n\t\t$scope.createMessageLines = false;\n\t\t$scope.createSuccessLines = false;\n        \n        //peticion al servidor usando http\n        $http.post('editLine', $scope.lineForm)\n        .success(function(data)\n        {\t\n        \t\n        \tif(data['error']){\n        \t\t$scope.createMessageLines = [data['error']]\n    \t\t}else if(data['success']){\n    \t\t\t$scope.createMessageLines = false;\n    \t\t\tdelete $scope.detectChangesLine;\n    \t\t\tangular.copy($scope.lineForm,$scope.lines[$scope.lines.indexOf($scope.lineFormAux)]);\n    \t\t\t$scope.countLinesWeight();\n    \t\t\t$scope.createSuccessLines = \"La línea se edito con Exito!\";    \t\t\t\n    \t\t}\n\n    \t\t$scope.waitCreateLine = false\n\n        })\n        .error(function(data)\n        {\n        \t$scope.createSuccessLines = false\n        \t$scope.createMessageLines = [];\n\t\t\tfor(var m in data) {\n\t\t\t   $scope.createMessageLines.push(data[m][0]);\n\t\t\t}\n\t\t\t\n        \t$scope.waitCreateLine = false\n        });             \n        \n\t};\n\n\t//cargar el formulario de edicion de dependencias\n\t$scope.loadLineForm = function(line){\n\n\t\t$scope.lineFormAux = false;\n\t\t$scope.totalLinesWeightEdit = $scope.totalLinesWeight + line.weight; \n\t\t$scope.lineFormAux = line;\n\t\tangular.copy(line,$scope.lineForm);\n\t\t$scope.createMessageLines = false;\n\t\t$scope.createSuccessLines = false;\t\t\n\t\t$scope.selectedTabLines = 1\n\t\t$scope.detectChangesLine = false;\n\n\t}\n\n\t//cancela la edicion de dependencias\n\t$scope.cancelEditLine = function(){\n\n\t\t$scope.lineForm = {\n\t\t\tname: ''\n\t\t}\n\t\t$scope.selectedTabLines = 0;\n\t\tdelete $scope.detectChangesLine;\n\t\t$scope.createMessageLines = false;\n\t\t$scope.createSuccessLines = false;\n\t}\n\n\t\n\t//funcion que pregunta el password para eliminar una dependencia\n\t$scope.confirmDeleteLine = function(line){\n\n\t\t$scope.waitConfirmDeleteLine = line;\n\t\t$scope.popupTextLine= 'Para eliminar por favor ingrese su password:';\n\t\tline.deletePassword = ''\n\n\t};\n\n\t\n\t//funcion que cancela la eliminacion de dependencia\n\t$scope.closeWaitDeleteLine = function(line){\n\n\t\t$scope.waitConfirmDeleteLine = false;\n\t\tline.deletePassword = ''\n\t\t$scope.reassignAreas = false;\n\n\t};\n\n\n\t//funcion que envia la peticion para eliminar una dependencia \n\t$scope.deleteLine = function(line){\n\n\t\t$scope.waitDeleteLine = true;\n\t    //peticion al servidor usando http\n\t    $http.post('deleteLine', line)\n\t    .success(function(data)\n\t    {\t\n\t    \t\n\t    \tif(data['error']){\n\t    \t\t$scope.popupTextLine= data['error'];\n\t    \t\tline.deletePassword = '';\n    \t\t}else if(data['reassign']){\n    \t\t\t$scope.linesAux = [];\n    \t\t\tangular.copy($scope.lines,$scope.linesAux); \n    \t\t\t$scope.linesAux.splice($scope.lines.indexOf(line), 1);\n        \t\t$scope.popupTextLine = data['reassign']\n        \t\t$scope.reassignAreas= true;\n\t\t\t}else if(data['success']){\n\t\t\t\t$scope.reassignAreas= false;\n\t\t\t\t$scope.lines.splice($scope.lines.indexOf(line), 1);\n\t\t\t\t$scope.reassignSuccessLines = data['success'];\n\t\t\t\t$scope.countLinesWeight();\n\t\t\t}\n\t\t\t\n\t\t\t$scope.waitDeleteLine = false;\n\n\n\t    })\n\t    .error(function(data)\n\t    {\n\t    \t$location.reload();\t    \t\n\t    });             \n        \n\t};\n\n\t// *****************************************************************************\n\t// ÁREAS\n\t// *****************************************************************************\n\t$scope.areaForm = {\n\n\t\tname: '',\n\t\tobjective: '',\n\t\tweight: 0\n\t}\n\n\t$scope.areas = []\n\n\t$scope.countAreasWeight = function(){\n\n\t\t$scope.totalAreasWeight = 100;\n\t\t$scope.areas.forEach(function(area){\n\t\t\t$scope.totalAreasWeight -= area.weight;\n\t\t\tconsole.log(area.weight,$scope.totalAreasWeight);\n\t\t});\n \t}\n\n \t\n \t$scope.loadAreasForLine = function(select){\n \t\t$scope.totalAreasWeight = 100;\n \t\t\n \t\tif (!select){\n \t\t\t$scope.areas = [];\n \t\t\treturn\n \t\t};\n \t\t$scope.cancelEditArea();\n \t\t$scope.waitLoadAreas = true;\n\n\t\t$http.post('viewAreas', {'line': select.id})\n\t    .success(function(data)\n\t    {\t\n\t    \t\n\t    \tif(data['error']){\n\n\t\t\t\t$location.reload();\n\t\t\t}else{\n\t\t\t\t$scope.areas= data\n\t\t\t}\n\n    \t\t$scope.countAreasWeight();\n\t\t\t$scope.waitLoadAreas = false;\n\n\t    })\n\t    .error(function(data)\n\t    {\n\t    \t$state.go('home.config');\n\n\t    });\n \t}\n\n\t$scope.selectedTabAreas = 0;\n\n    //muetras todas las Areas creadas\n\t$scope.waitLoadAreas = false;\n\t$scope.waitDeleteArea = null;\n\n\n\n    /*$scope.$watch('areaForm.weight', function(newVal, oldVal) {\n\n       if (newVal && $scope.areaFormAux) {\n\t    \tif (newVal != $scope.areaFormAux.weight) {\n\t    \t\t$scope.detectChangesArea = true;\n\t    \t\t\n    \t\t}else{\n    \t\t\t$scope.detectChangesArea = false;\n    \t\t}\n\n    \t}else {\n    \t\t$scope.detectchangesArea = false;\n    \t}\n   });*/\n\n\t\n    //oculta los alert de mensajes\n    $scope.dismissAlertAreas = function(){\n\n\t\t$scope.createMessageAreas = false;\n\t\t$scope.createSuccessAreas = false;\t\t\n\n\t}\n\n\t//funcion que crea una nueva dependencia\n\t$scope.createArea = function(id){\n\n\t\t$scope.waitCreateArea = true;\n\t\t$scope.createMessageAreas = null;\n\t\t$scope.createSuccessAreas = false;\n\t\t$scope.areaForm.line = id;\n\n        //peticion al servidor usando http\n        $http.post('createArea', $scope.areaForm)\n        .success(function(data)\n        {\t\n        \t\n        \tif(data['error']){\n        \t\t$scope.createMessageAreas = [data['error']]\n    \t\t}else if(data['success']){\n    \t\t\t$scope.createMessageAreas = false;\n    \t\t\t$scope.areas.push(data['success']);\n    \t\t\t$scope.createSuccessAreas = \"La línea se creo con Exito!\";\n    \t\t\t$scope.areaForm = {\n\n\t\t\t\t\tname: '',\n\t\t\t\t\tobjective: '',\n\t\t\t\t\tweight: 0\n\t\t\t\t}\n    \t\t}\n\n\t\t\t$scope.countAreasWeight();\n    \t\t$scope.waitCreateArea = false\n\n        })\n        .error(function(data)\n        {\n        \t$scope.createMessageAreas = [];\n\t\t\tfor(var m in data) {\n\t\t\t   $scope.createMessageAreas.push(data[m][0]);\n\t\t\t}\n\t\t\t\n        \t$scope.waitCreateArea = false\n        });       \n\t};\n\n\t//funcion que envia la peticion para edita una Área\n\t$scope.editAreas = function(){\n\n\t\t$scope.waitCreateArea = true;\n\t\t$scope.createMessageAreas = false;\n\t\t$scope.createSuccessAreas = false;\n        \n        //peticion al servidor usando http\n        $http.post('editArea', $scope.areaForm)\n        .success(function(data)\n        {\t\n        \t\n        \tif(data['error']){\n        \t\t$scope.createMessageAreas = [data['error']]\n    \t\t}else if(data['success']){\n    \t\t\t\n    \t\t\t//si se edito la linea de esta area,cargo de nuevo las areas\n    \t\t\tif($scope.areaFormAux.line != $scope.areaForm.line){\n\n    \t\t\t\t$scope.cancelEditArea()\n    \t\t\t\t$scope.areas.splice($scope.areas.indexOf($scope.areaFormAux), 1);\n    \t\t\t};\n\n    \t\t\t$scope.createMessageAreas = false;\n    \t\t\tdelete $scope.detectChangesArea;\n    \t\t\tangular.copy($scope.areaForm,$scope.areas[$scope.areas.indexOf($scope.areaFormAux)]);\n    \t\t\t$scope.countAreasWeight();\n    \t\t\t$scope.createSuccessAreas = \"La línea se edito con Exito!\";    \t\n    \t\t\t\t\t\n    \t\t}\n\n    \t\t$scope.waitCreateArea = false\n\n        })\n        .error(function(data)\n        {\n        \t$scope.createSuccessAreas = false\n        \t$scope.createMessageAreas = [];\n\t\t\tfor(var m in data) {\n\t\t\t   $scope.createMessageAreas.push(data[m][0]);\n\t\t\t}\n\t\t\t\n        \t$scope.waitCreateArea = false\n        });             \n        \n\t};\n\n\t//cargar el formulario de edicion de dependencias\n\t$scope.loadAreaForm = function(area){\n\n\t\t$scope.areaFormAux = false;\n\t\t$scope.countAreasWeight();\n\t\t$scope.totalAreasWeightEdit = $scope.totalAreasWeight + area.weight; \n\t\t$scope.areaFormAux = area;\n\t\tangular.copy(area,$scope.areaForm);\n\t\t$scope.createMessageAreas = false;\n\t\t$scope.createSuccessAreas = false;\t\t\n\t\t$scope.selectedTabAreas = 1\n\t\t$scope.$eval('detectChangesArea = false');\n\n\t}\n\n\t//cancela la edicion de dependencias\n\t$scope.cancelEditArea = function(){\n\n\t\t/*$scope.areaFormAux = false;\n\t\t$scope.totalAreasWeightEdit = $scope.totalAreasWeight + area.weight; */\n\t\t$scope.areaForm = {\n\t\t\tname: '',\n\t\t\tobjective: '',\n\t\t\tweight: 0\n\t\t}\n\t\t$scope.selectedTabAreas = 0;\n\t\t$scope.$eval('detectChangesArea = null');\n\t\t$scope.detectChangesArea = null;\n\t\t$scope.createMessageAreas = false;\n\t\t$scope.createSuccessAreas = false;\n\t}\n\n\t\n\t//funcion que pregunta el password para eliminar una dependencia\n\t$scope.confirmDeleteArea = function(area){\n\n\t\t$scope.waitConfirmDeleteArea = area;\n\t\t$scope.popupTextArea= 'Para eliminar por favor ingrese su password:';\n\t\tarea.deletePassword = ''\n\t\t$scope.reassignPrograms= false;\n\n\t};\n\n\t//funcion que cancela la eliminacion de dependencia\n\t$scope.closeWaitDeleteArea = function(area){\n\n\t\t$scope.waitConfirmDeleteArea = false;\n\t\tarea.deletePassword = ''\n\n\t};\n\n\n\t//funcion que envia la peticion para eliminar una dependencia \n\t$scope.deleteArea = function(area){\n\n\t\t$scope.waitDeleteArea = true;\n\t    //peticion al servidor usando http\n\t    $http.post('deleteArea', area)\n\t    .success(function(data)\n\t    {\t\n\t    \t\n\t    \tif(data['error']){\n\t    \t\tarea.deletePassword = ''\n\t    \t\t$scope.popupTextArea= data['error'];\n\t\t\t}else if(data['reassign']){\n    \t\t\t$scope.areasAux = [];\n    \t\t\tangular.copy($scope.areas,$scope.areasAux); \n    \t\t\t$scope.areasAux.splice($scope.areas.indexOf(area), 1);\n        \t\t$scope.popupTextArea = data['reassign']\n        \t\t$scope.reassignPrograms= true;\n\t\t\t}else if(data['success']){\n\t\t\t\t$scope.reassignPrograms= false;\n\t\t\t\t$scope.areas.splice($scope.areas.indexOf(area), 1);\n\t\t\t}\n\t\t\t\n\t\t\t$scope.waitDeleteArea = false;\n\t\t\t$scope.countAreasWeight();\n\n\n\t    })\n\t    .error(function(data)\n\t    {\n\t    \t$location.reload();\t    \t\n\t    });             \n        \n\t};\n\n\n\t// *****************************************************************************\n\t// PROGRAMAS\n\t// *****************************************************************************\n\t$scope.programForm = {\n\n\t\tname: '',\n\t\tobjective: '',\n\t\tweight: 0\n\t}\n\n\t$scope.programsNoContentMsg = 'Por favor seleccione una línea'\n\n\t$scope.programs = []\n\n\t\n\t$scope.countProgramsWeight = function(){\n\n\t\t$scope.totalProgramsWeight = 100;\n\t\t$scope.programs.forEach(function(program){\n\t\t\t$scope.totalProgramsWeight -= program.weight;\n\t\t});\n \t}\n\n \t//funcion que muestra el mensaje en los formularios\n\t$scope.programsNoContentMsgFun = function(data,name,select){\n\n\t\tif (name =='A') {\n\n\t\t\t$scope.totalProgramsWeight = 100;\n\n\t\t\tif (data.length <= 0) {\n\t\t\t\treturn 'En: ' + select.name + ' No hay ningun programa creado'\n\t\t\t}else if ($scope.totalProgramsWeight == 0) {\n\n\n\t\t\t\treturn 'Ya completo el 100% del área: \"' + select.name +'\"'\n\t\t\t}else{\n\n\t\t\t\treturn null\n\t\t\t};\n\n\t\t}else{\n\t\t\tif (data == null) {\n\n\t\t\t\treturn 'Por favor seleccione una línea';\n\t\t\t}else if (!$scope.programsLineSelected){\n\t\t\t\treturn 'Por favor seleccione una área';\n\n\t\t\t};\n\n\t\t};\n\t\t\t\t\n \t}\n\n \t$scope.programsLoadAreasForLine = function(select){\n\n \t\t$scope.totalAreasWeight = 100;\n\n \t\tif (!select){\n \t\t\t$scope.programsNoContentMsg = $scope.programsNoContentMsgFun(null,'L',select);\n \t\t\t$scope.programs = [];\n \t\t\treturn\n \t\t};\n \t\t\n \t\tif ($scope.programFormAux) {\n\n \t\t\t$scope.cancelEditProgram($scope.programFormAux);\n \t\t};\n \t\t$scope.waitLoadAreas = true;\n\n\t\t$http.post('viewAreas', {'line': select.id})\n\t    .success(function(data)\n\t    {\t\n\t    \t\n\t    \tif(data['error']){\n\n\t\t\t\t$location.reload();\n\t\t\t}else{\n\t\t\t\t$scope.programsAreas = data\n\t\t\t\t$scope.programsNoContentMsg = $scope.programsNoContentMsgFun(data,'L',select);\n\t\t\t}\n\n    \t\t$scope.countAreasWeight();\n\t\t\t$scope.waitLoadAreas = false;\n\n\t    })\n\t    .error(function(data)\n\t    {\n\t    \t$state.go('home.config');\n\n\t    });\n \t}\n \t$scope.loadTags = function(query,select) {\n \t\treturn $http.post('viewIndicatorForArea', {'area': select.id,'indicator': query})\n    };\n \t$scope.loadProgramsForArea = function(select){\n \t\tconsole.log(select)\n \t\t$scope.totalProgramsWeight = 100;\n\n \t\tif (!select){\n\t\t\t$scope.programsNoContentMsg = $scope.programsNoContentMsgFun([],'L',select);\n \t\t\t$scope.programs = []\n \t\t\treturn\n \t\t};\n\n\t\t$scope.waitLoadPrograms = true;\n\t\t$scope.cancelEditProgram(select);\n\n\t\t$http.post('viewProgram', {'area': select.id})\n\t    .success(function(data)\n\t    {\t\n\t    \tif(data['error']){\n\n\t\t\t\t$location.reload();\n\t\t\t}else{\n\t\t\t\t$scope.programs= data\n\t\t\t\tfor (i = 0; i < $scope.programs.programs.length; i++) {\n\t\t\t\t \t$scope.programs.programs[i].count = i\n\t\t\t\t } \n\t\t\t\t$scope.programsNoContentMsg = $scope.programsNoContentMsgFun(data,'A',select);\n\t\t\t}\n\n    \t\t$scope.totalProgramsWeight = 100;\n\t\t\t$scope.waitLoadPrograms = false;\n\n\t    })\n\t    .error(function(data)\n\t    {\n\t    \t$state.go('home.config');\n\n\t    });\n \t}\n\n\t$scope.selectedTabPrograms = 0;\n\n    //muetras todas las Programs creadas\n\t$scope.waitLoadPrograms = false;\n\t$scope.waitDeleteProgram = null;\n\n\n\n    $scope.$watch('programForm.weight', function(newVal, oldVal) {\n\n       if (newVal && $scope.programFormAux) {\n\t    \tif (newVal != $scope.programFormAux.weight) {\n\t    \t\t$scope.detectChangesProgram = true;\n\t    \t\t\n    \t\t}else{\n    \t\t\t$scope.detectChangesProgram = false;\n    \t\t}\n\n    \t}else {\n    \t\t$scope.detectchangesProgram = false;\n    \t}\n   });\n\n\t//oculta los alert de mensajes\n\n    /*$scope.$watchCollection('programForm', function (newVal, oldVal) { \n    \tconsole.log(newVal,oldVal,$scope.changesProgram);\n    \t//$scope.detectChangesProgram();\n    \t\n\n    });*/\n\n\n    //oculta los alert de mensajes\n    $scope.dismissAlertPrograms = function(){\n\n\t\t$scope.createMessagePrograms = false;\n\t\t$scope.createSuccessPrograms = false;\t\t\n\n\t}\n\n\t//funcion que crea una nueva dependencia\n\t$scope.createProgram = function(areaSelect){\n\n\t\t$scope.waitCreateProgram = true;\n\t\t$scope.createMessagePrograms = null;\n\t\t$scope.createSuccessPrograms = false;\n\t\t$scope.programForm.area = areaSelect.id;\n\n        //peticion al servidor usando http\n        $http.post('createProgram', $scope.programForm)\n        .success(function(data)\n        {\t\n        \t\n        \tif(data['error']){\n        \t\t$scope.createMessagePrograms = [data['error']]\n    \t\t}else if(data['success']){\n    \t\t\t$scope.createMessagePrograms = false;\n    \t\t\t//$scope.programs.push(data['success']);\n    \t\t\t$scope.programsNoContentMsg = $scope.programsNoContentMsgFun($scope.programs,'A',areaSelect);\n    \t\t\t$scope.createSuccessPrograms = \"El programa se creo con Exito!\";\n    \t\t\t$scope.programForm = {\n\n\t\t\t\t\tname: '',\n\t\t\t\t\tobjective: '',\n\t\t\t\t\tweight: 0\n\t\t\t\t}\n\t\t\t\t$scope.loadProgramsForArea(areaSelect)\n    \t\t}\n\n\t\t\t$scope.totalProgramsWeight = 100;\n    \t\t$scope.waitCreateProgram = false\n\n        })\n        .error(function(data)\n        {\n        \t$scope.createMessagePrograms = [];\n\t\t\tfor(var m in data) {\n\t\t\t   $scope.createMessagePrograms.push(data[m][0]);\n\t\t\t}\n\t\t\t\n        \t$scope.waitCreateProgram = false\n        });       \n\t};\n\n\t//funcion que envia la peticion para edita una dependencia\n\t$scope.editPrograms = function(areaSelect){\n\n\t\t$scope.waitCreateProgram = true;\n\t\t$scope.createMessagePrograms = false;\n\t\t$scope.createSuccessPrograms = false;\n        \n        //peticion al servidor usando http\n        $http.post('editProgram', $scope.programForm)\n        .success(function(data)\n        {\t\n        \t\n        \tif(data['error']){\n        \t\t$scope.createMessagePrograms = [data['error']]\n    \t\t}else if(data['success']){\n    \t\t\t//si se edito el área de este programa,lo elimino de la vista\n    \t\t\t// if($scope.programFormAux.area != $scope.programForm.area){\n\n    \t\t\t// \t$scope.cancelEditProgram()\n    \t\t\t// \t$scope.programs.splice($scope.programs.indexOf($scope.programFormAux), 1);\n    \t\t\t// };\n    \t\t\t// $scope.createMessagePrograms = false;\n    \t\t\t// delete $scope.detectChangesProgram;\n    \t\t\t// angular.copy($scope.programForm,$scope.programs[$scope.programs.indexOf($scope.programFormAux)]);\n    \t\t\t// $scope.totalProgramsWeight = 100;\n    \t\t\t// $scope.programsNoContentMsg = $scope.programsNoContentMsgFun($scope.programs,'A',areaSelect);\n    \t\t\t$scope.createSuccessPrograms = \"El programa se edito con Exito!\";\n    \t\t\t$scope.loadProgramsForArea(areaSelect)    \t\t\t\n    \t\t}\n\n    \t\t$scope.waitCreateProgram = false\n\n        })\n        .error(function(data)\n        {\n        \t$scope.createSuccessPrograms = false\n        \t$scope.createMessagePrograms = [];\n\t\t\tfor(var m in data) {\n\t\t\t   $scope.createMessagePrograms.push(data[m][0]);\n\t\t\t}\n\t\t\t\n        \t$scope.waitCreateProgram = false\n        });             \n        \n\t};\n\n\t//cargar el formulario de edicion de programa\n\t$scope.loadProgramForm = function(program){\n\n\t\t$scope.programFormAux = false;\n\t\t$scope.totalProgramsWeightEdit = $scope.totalProgramsWeight + program.weight; \n\t\t$scope.programFormAux = program;\n\t\tangular.copy(program,$scope.programForm);\n\t\tind = []\n\t\t$scope.programs.ir[program.count].forEach(function(indicador){\n\t\t\tind.push(indicador.name)\n\t\t});\n\t\t$scope.programForm.tags = ind\n\t\t$scope.createMessagePrograms = false;\n\t\t$scope.createSuccessPrograms = false;\t\t\n\t\t$scope.selectedTabPrograms = 1\n\t\t$scope.detectChangesProgram = false;\n\n\t}\n\n\t//cancela la edicion de dependencias\n\t$scope.cancelEditProgram = function(select){\n\n\t\t$scope.programsNoContentMsg = $scope.programsNoContentMsgFun($scope.programs,'A',select)\n\t\t$scope.programForm = {\n\t\t\tname: '',\n\t\t\tobjective: '',\n\t\t\tweight: 0\n\t\t}\n\t\t$scope.selectedTabPrograms = 0;\n\t\tdelete $scope.detectChangesProgram;\n\t\t$scope.createMessagePrograms = false;\n\t\t$scope.createSuccessPrograms = false;\n\t}\n\n\t\n\t//funcion que pregunta el password para eliminar una dependencia\n\t$scope.confirmDeleteProgram = function(program){\n\n\t\t$scope.waitConfirmDeleteProgram = program;\n\t\t$scope.popupTextProgram= 'Para eliminar por favor ingrese su password:';\n\t\tprogram.deletePassword = ''\n\n\t};\n\n\t//funcion que cancela la eliminacion de dependencia\n\t$scope.closeWaitDeleteProgram = function(program){\n\t\t$scope.reassignProjects = false\n\t\t$scope.waitConfirmDeleteProgram = false;\n\t\tprogram.deletePassword = ''\n\n\t};\n\n\n\t//funcion que envia la peticion para eliminar una dependencia \n\t$scope.deleteProgram = function(program){\n\n\t\t$scope.waitDeleteProgram = true;\n\t    //peticion al servidor usando http\n\t    $http.post('deleteProgram', program)\n\t    .success(function(data)\n\t    {\t\n\t    \t\n\t    \tif(data['error']){\n\t    \t\tprogram.deletePassword = ''\n\t    \t\t$scope.popupTextProgram= data['error'];\n\t\t\t}else if(data['reassign']){\n    \t\t\t$scope.programsAux = [];\n    \t\t\tangular.copy($scope.programs.programs,$scope.programsAux); \n    \t\t\t$scope.programsAux.splice($scope.programs.programs.indexOf(program), 1);\n        \t\t$scope.popupTextProgram = data['reassign']\n        \t\t$scope.reassignProjects= true;\n\t\t\t}else if(data['success']){\n\t\t\t\t$scope.reassignProjects= false;\n\t\t\t\t$scope.programs.programs.splice($scope.programs.programs.indexOf(program), 1);\n\t\t\t}\n\t\t\t\n\t\t\tconsole.log($scope.waitDeleteProgram);\n\t\t\t$scope.waitDeleteProgram = false;\n\t\t\t//$scope.countProgramsWeight();\n\n\n\t    })\n\t    .error(function(data)\n\t    {\n\t    \t$location.reload();\t    \t\n\t    });             \n        \n\t};   \n\n\t// *****************************************************************************\n\t// PROYECTOS\n\t// *****************************************************************************\n\n\t$scope.projectsNoContentMsg = 'Por favor seleccione un programa'\n\t$scope.selectedTabProjects = 0;\n\n\t$scope.projectForm = {\n\n\t\tname: '',\n\t\tdescription: '',\n\t\tweight: 0,\n\t\tdependencename:'',\n\t\tprogram:'',\n\t\tbudget:'',\n\t\tyear1:'',\n\t\tyear2:'',\n\t\tyear3:'',\n\t\tyear4:'',\n\t}\n\n\t$http.get('viewPrograms').success(function(data)\n    {\n    \t$scope.projectsPrograms = data;\n\t});\n\n\t$scope.projects = []\n\n\t$scope.countProjectsWeight = function(){\n\n\t\t$scope.totalProjectsWeight = 100;\n\t\t$scope.projects.forEach(function(project){\n\t\t\t$scope.totalProjectsWeight -= project.weight;\n\t\t});\n \t}\n\n\t//funcion que carga los programas para crear un proyecto.\n\t$scope.projectsLoadPrograms = function(program){\n\t\tprogram = angular.element('#typeHeadProjects').val()\n\t\tif (program == '' || program == undefined || !program){\n\n\t\t\treturn\n\t\t};\n\t\t$scope.waitLoadPrograms = true;\n\t    //peticion al servidor usando http\n\t  \t$http.post('viewProgramForName', {'name': program})\n\t    .success(function(data)\n\t    {\t\n\t\t\tconsole.log(data);\n\t\t\t$scope.waitLoadPrograms = false;\n\t\t\t/*return data.map(function(item){\n\t\t        return item;\n\t        });*/\n\t        $scope.projectsPrograms = data;\t    \t\n\t\t\t$scope.countProgramsWeight();\n\n\n\t    })\n\t    .error(function(data)\n\t    {\n\t    \t//return data;\n\t    \t$scope.waitLoadPrograms = false;\n\t    \t$scope.projectsPrograms = $scope.projectsPrograms;\n\t    });             \n        \n\t};\n\n\t//funcion que carga los programas de el area para editar un proyecto.\n\t$scope.projectsLoadProgramsForArea = function(search){\n\t\tsearch = angular.element('#typeHeadPrograms').val();\n\t\tprogram = $scope.projectsProgramSelected;\n\t\t$scope.detectChangesProject = true\n\n\t\tif (program == '' || program == undefined || !program || search == '' || search == undefined || !search){\n\n\t\t\treturn\n\t\t};\n\t    //peticion al servidor usando http\n\t  \t$http.post('viewProgramForNameInArea', {'area': program.area,'search': search})\n\t    .success(function(data)\n\t    {\t\n\t\t\t/*return data.map(function(item){\n\t\t        return item;\n\t        });*/\n\t        $scope.projectsProgramsInArea = data;\t    \t\n\t\t\t$scope.countProgramsWeight();\n\n\n\t    })\n\t    .error(function(data)\n\t    {\n\t    \t//return data;\n\t    \t$scope.waitLoadPrograms = false;\n\t    \t$scope.projectsPrograms = $scope.projectsPrograms;\n\t    });             \n        \n\t};\n\n\n\t//funcion que muestra el mensaje en los formularios\n\t$scope.projectsNoContentMsgFun = function(data,select){\n\n\t\t\t$scope.countProjectsWeight();\n\t\t\tif (data.length <= 0) {\n\t\t\t\treturn 'En: ' + select.name + ' No hay ningun proyecto creado'\n\t\t\t}else if ($scope.totalProjectsWeight == 0) {\n\t\t\t\treturn 'Ya completo el 100% del programa: \"' + select.name +'\"'\n\t\t\t}else{\n\n\t\t\t\treturn null\n\t\t\t};\n\n\t\t\tif (data == null) {\n\t\t\t\treturn 'Por favor seleccione una línea';\n\t\t\t}else if (!$scope.programsLineSelected){\n\t\t\t\treturn 'Por favor seleccione una área';\n\n\t\t\t};\n\n \t}\n\n\t$scope.selectProject = function(programSelected) {\n\t\t$scope.projectLoadingPrograms = true;\n\t\t$scope.cancelEditProject(programSelected);\n\t\t$scope.projectsProgramSelected = programSelected;\n       \t$scope.totalProjectsWeight = 100;\n \t\t\n \t\tif (!programSelected){\n \t\t\t$scope.projectsNoContentMsg = $scope.projectsNoContentMsgFun(null,programSelected);\n \t\t\t$scope.projects = [];\n \t\t\treturn\n \t\t};\n \t\t//$scope.cancelEditProject();\n \t\t$scope.waitLoadProjects = true;\n\n\t\t$http.post('viewProject', {'program': programSelected.id})\n\t    .success(function(data)\n\t    {\t\n\t    \t\n\t    \tif(data['error']){\n\n\t\t\t\t$location.reload();\n\t\t\t}else{\n\t\t\t\t$scope.projects= data\n\t\t\t\t$scope.projectsNoContentMsg = $scope.projectsNoContentMsgFun(data,programSelected);\n\t\t\t\t$http.post('viewProgramForNameInArea',{'area': programSelected.id,'search': ' '}).success(function(data)\n\t\t\t    {\n\t\t\t    \t$scope.projectsProgramsInArea = data;\n\t\t\t    \tconsole.log(data);\n\t\t\t\t});\n\t\t\t}\n\n    \t\t$scope.countProjectsWeight();\n\t\t\t$scope.waitLoadProjects = false;\n\n\t    })\n\t    .error(function(data)\n\t    {\n\t    \t$state.go('home.config');\n\n\t    });\t    \n   \t};\n\n   \t//cancela la edicion de un proyecto\n\t$scope.cancelEditProject = function(select){\n\n\t\t$scope.projectsNoContentMsg = $scope.projectsNoContentMsgFun($scope.projects,select)\n\t\t$scope.projectForm = {\n\t\t\tname: '',\n\t\t\tdescription: '',\n\t\t\tweight: 0,\n\t\t\tdependencename:'',\n\t\t\tprogram:'',\n\t\t\tbudget:'',\n\t\t\tyear1:'',\n\t\t\tyear2:'',\n\t\t\tyear3:'',\n\t\t\tyear4:'',\n\t\t}\n\t\t$scope.selectedTabProjects = 0;\n\t\tdelete $scope.detectChangesProject;\n\t\t$scope.createMessageProjects = false;\n\t\t$scope.createSuccessProjects = false;\n\t}\n\n   \t//cargar el formulario de edicion de proyecto\n\t$scope.loadProjectForm = function(project){\n\t\t$scope.projectFormAux = false;\n\t\t$scope.detectChangesProject = false;\n\t\t$scope.countProjectsWeight();\n\t\t$scope.totalProjectsWeightEdit = $scope.totalProjectsWeight + project.weight; \n\t\t$scope.projectFormAux = project;\n\t\tangular.copy(project,$scope.projectForm);\n\t\t/*$scope.projectsProgramsInArea.forEach(function(item) {\n\t\t    if (item.id == $scope.projectsProgramSelected.id) {\n\t\t   \t\t$scope.projectForm.programName = item.name\n\t\t    };\n\t\t});*/\n\t\t$scope.createMessageProjects = false;\n\t\t$scope.createSuccessProjects = false;\t\t\n\t\t$scope.selectedTabProjects = 1\n\n\t} \n\n\n\t//funcion que envia la peticion para edita una dependencia\n\t$scope.createProjects = function(programSelect){\n\n\t\t$scope.waitCreateProject = true;\n\t\t$scope.createMessageProjects = false;\n\t\t$scope.createSuccessProjects = false;\n\t\t$scope.projectForm.program = programSelect.id;\n\t\tconsole.log($scope.projectForm);\n        \n        //peticion al servidor usando http\n        $http.post('createProject', $scope.projectForm)\n        .success(function(data)\n        {\t\n        \t\n        \tif(data['error']){\n        \t\t$scope.createMessageProjects = [data['error']]\n    \t\t}else if(data['success']){\n    \t\t\t\n    \t\t\t$scope.createMessageProjects = false;\n    \t\t\tdelete $scope.detectChangesProject;\n    \t\t\t$scope.projects.push(data['success']);\n    \t\t\t$scope.countProjectsWeight();\n    \t\t\t$scope.projectsNoContentMsg = $scope.projectsNoContentMsgFun($scope.projects,programSelect);\n    \t\t\t$scope.projectForm = {\n\t\t\t\t\tname: '',\n\t\t\t\t\tdescription: '',\n\t\t\t\t\tweight: 0,\n\t\t\t\t\tdependencename:'',\n\t\t\t\t\tprogram:'',\n\t\t\t\t\tbudget:'',\n\t\t\t\t\tyear1:'',\n\t\t\t\t\tyear2:'',\n\t\t\t\t\tyear3:'',\n\t\t\t\t\tyear4:'',\n\t\t\t\t}\n    \t\t\t$scope.createSuccessProjects = \"El Proyecto se edito con Exito!\";    \t\t\t\n    \t\t}\n\n    \t\t$scope.waitCreateProject = false\n\n        })\n        .error(function(data)\n        {\n        \t$scope.createSuccessProjects = false\n        \t$scope.createMessageProjects = [];\n\t\t\tfor(var m in data) {\n\t\t\t   $scope.createMessageProjects.push(data[m][0]);\n\t\t\t}\n\t\t\t\n        \t$scope.waitCreateProject = false\n        });             \n        \n\t}; \n\n\t//funcion que envia la peticion para edita una dependencia\n\t$scope.editProjects = function(projectSelect){\n\n\t\t$scope.waitCreateProject = true;\n\t\t$scope.createMessageProjects = false;\n\t\t$scope.createSuccessProjects = false;\n        \n        //peticion al servidor usando http\n        $http.post('editProject', $scope.projectForm)\n        .success(function(data)\n        {\t\n        \t\n        \tif(data['error']){\n        \t\t$scope.createMessageProjects = [data['error']]\n    \t\t}else if(data['success']){\n    \t\t\t//si se edito el área de este Proyecto,lo elimino de la vista\n    \t\t\tconsole.log($scope.projectFormAux,$scope.projectForm);\n    \t\t\tif($scope.projectFormAux.program != $scope.projectForm.program){\n\n    \t\t\t\t$scope.cancelEditProject()\n    \t\t\t\t$scope.projects.splice($scope.projects.indexOf($scope.projectFormAux), 1);\n    \t\t\t};\n    \t\t\t$scope.createMessageProjects = false;\n    \t\t\tdelete $scope.detectChangesProject;\n    \t\t\tangular.copy($scope.projectForm,$scope.projects[$scope.projects.indexOf($scope.projectFormAux)]);\n    \t\t\t$scope.countProjectsWeight();\n    \t\t\t$scope.projectsNoContentMsg = $scope.projectsNoContentMsgFun($scope.projects,projectSelect);\n    \t\t\t$scope.createSuccessProjects = \"El Proyecto se edito con Exito!\";    \t\t\t\n    \t\t}\n\n    \t\t$scope.waitCreateProject = false\n\n        })\n        .error(function(data)\n        {\n        \t$scope.createSuccessProjects = false\n        \t$scope.createMessageProjects = [];\n\t\t\tfor(var m in data) {\n\t\t\t   $scope.createMessageProjects.push(data[m][0]);\n\t\t\t}\n\t\t\t\n        \t$scope.waitCreateProject = false\n        });             \n        \n\t};\n\t$scope.confirmDeleteProject = function(project){\n\n\t\t$scope.waitConfirmDeleteProject = project;\n\t\t$scope.popupTextProject= 'Para eliminar por favor ingrese su password:';\n\t\tproject.deletePassword = ''\n\t\t$scope.reassignPrograms= false;\n\n\t};\n\n\t//funcion que cancela la eliminacion de dependencia\n\t$scope.closeWaitDeleteProject = function(project){\n\n\t\t$scope.waitConfirmDeleteProject = false;\n\t\tproject.deletePassword = ''\n\n\t};\n\n\n\t//funcion que envia la peticion para eliminar una dependencia \n\t$scope.deleteProject = function(project){\n\n\t\t$scope.waitDeleteProject = true;\n\t    //peticion al servidor usando http\n\t    $http.post('deleteProject', project)\n\t    .success(function(data)\n\t    {\t\n\t    \t\n\t    \tif(data['error']){\n\t    \t\tproject.deletePassword = ''\n\t    \t\t$scope.popupTextProject= data['error'];\n\t\t\t}else if(data['reassign']){\n    \t\t\t$scope.projectsAux = [];\n    \t\t\tangular.copy($scope.projects,$scope.projectsAux); \n    \t\t\t$scope.projectsAux.splice($scope.projects.indexOf(project), 1);\n        \t\t$scope.popupTextProject = data['reassign']\n        \t\t$scope.reassignProjects= true;\n\t\t\t}else if(data['success']){\n\t\t\t\t$scope.reassignProjects= false;\n\t\t\t\t$scope.projects.splice($scope.projects.indexOf(project), 1);\n\t\t\t}\n\t\t\t\n\t\t\t$scope.waitDeleteProject = false;\n\t\t\t$scope.countProjectsWeight();\n\n\n\t    })\n\t    .error(function(data)\n\t    {\n\t    \t$location.reload();\t    \t\n\t    });             \n        \n\t};\n\n\t// *****************************************************************************\n\t// Indicadores\n\t// *****************************************************************************\n\t$scope.indicatorsNoContentMsg = 'Por favor seleccione una línea'\n\t$scope.indicator = []\n\t$scope.indicatorsLoadAreasForLine = function(select){\n\n\t\t\t$scope.totalAreasWeight = 100;\n\t\t\t\n\t\t\tif (!select){\n\t\t\t\t$scope.indicatorsNoContentMsg = $scope.indicatorNoContentMsgFun(null,'L',select);\n\t\t\t\t$scope.indicator = [];\n\t\t\t\treturn\n\t\t\t};\n\t\t\t\n\t\t\tif ($scope.programFormAux) {\n\n\t\t\t\t$scope.cancelEditProgram($scope.programFormAux);\n\t\t\t};\n\t\t\t$scope.waitLoadAreas = true;\n\n\t\t$http.post('viewAreas', {'line': select.id})\n\t    .success(function(data)\n\t    {\t\n\t    \t\n\t    \tif(data['error']){\n\n\t\t\t\t$location.reload();\n\t\t\t}else{\n\t\t\t\t$scope.programsAreas= data\n\t\t\t\t$scope.indicatorsNoContentMsg = $scope.indicatorNoContentMsgFun(data,'L',select);\n\t\t\t}\n\n\t\t\t$scope.countAreasWeight();\n\t\t\t$scope.waitLoadAreas = false;\n\n\t    })\n\t    .error(function(data)\n\t    {\n\t    \t$state.go('home.config');\n\n\t    });\n\t\t}\n\t$scope.loadIndicatorForArea = function(select){\n\n\t\t\t$scope.totalIndicatorsWeight = 100;\n\t\t\tif (!select){\n\t\t\t$scope.indicatorsNoContentMsg = $scope.indicatorNoContentMsgFun([],'L',select);\n\t\t\t\t$scope.indicator = []\n\t\t\t\treturn\n\t\t\t};\n\n\t\t$scope.waitLoadPrograms = true;\n\t\t$scope.cancelEditProgram(select);\n\n\t\t$http.post('viewResultIndicator', {'area': select.id})\n\t    .success(function(data)\n\t    {\t\n\t    \t\n\t    \tif(data['error']){\n\n\t\t\t\t$location.reload();\n\t\t\t}else{\n\t\t\t\t$scope.indicator= data\n\t\t\t\t$scope.indicatorsNoContentMsg = $scope.indicatorNoContentMsgFun(data,'A',select);\n\t\t\t}\n\n\t\t\t$scope.countIndicatorsWeight();\n\t\t\t$scope.waitLoadPrograms = false;\n\n\t    })\n\t    .error(function(data)\n\t    {\n\t    \t$state.go('home.config');\n\n\t    });\n\t\t}\n\t\t$scope.indicatorNoContentMsgFun = function(data,name,select){\n\t\tif (name =='A') {\n\n\t\t\t$scope.countIndicatorsWeight();\n\n\t\t\tif (data.length <= 0) {\n\t\t\t\treturn 'En: ' + select.name + ' No hay ningun indicador creado'\n\t\t\t}else if ($scope.totalIndicatorsWeight == 0) {\n\t\t\t\treturn 'Ya completo el 100% del área: \"' + select.name +'\"'\n\t\t\t}else{\n\n\t\t\t\treturn null\n\t\t\t};\n\n\t\t}else{\n\t\t\tif (data == null) {\n\n\t\t\t\treturn 'Por favor seleccione una línea';\n\t\t\t}else if (!$scope.programsLineSelected){\n\t\t\t\treturn 'Por favor seleccione un área';\n\t\t\t\t\n\t\t\t};\n\n\t\t};\n\t\t\t\t\n\t\t}\n\t\t$scope.indicatorForm = {\n\n\t\tname: '',\n\t\tgoal: '',\n\t\tweight: 0\n\t}\n\t\t$scope.createIndicator = function(areaSelect){\n\n\t\t$scope.waitCreateProgram = true;\n\t\t$scope.createMessagePrograms = null;\n\t\t$scope.createSuccessPrograms = false;\n\t\t$scope.indicatorForm.area = areaSelect.id;\n\n\t    //peticion al servidor usando http\n\t    $http.post('createIndicator', $scope.indicatorForm)\n\t    .success(function(data)\n\t    {\t\n\t    \t\n\t    \tif(data['error']){\n\t    \t\t$scope.createMessagePrograms = [data['error']]\n\t\t\t}else if(data['success']){\n\t\t\t\t$scope.createMessagePrograms = false;\n\t\t\t\t$scope.indicator.push(data['success']);\n\t\t\t\t$scope.indicatorsNoContentMsg = $scope.indicatorNoContentMsgFun($scope.indicator,'A',areaSelect);\n\t\t\t\t$scope.createSuccessPrograms = \"El indicador se creo con Exito!\";\n\t\t\t\t$scope.indicatorForm = {\n\n\t\t\t\t\tname: '',\n\t\t\t\t\tgoal: '',\n\t\t\t\t\tweight: 0\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$scope.countIndicatorsWeight();\n\t\t\t$scope.waitCreateProgram = false\n\n\t    })\n\t    .error(function(data)\n\t    {\n\t    \t$scope.createMessagePrograms = [];\n\t\t\tfor(var m in data) {\n\t\t\t   $scope.createMessagePrograms.push(data[m][0]);\n\t\t\t}\n\t\t\t\n\t    \t$scope.waitCreateProgram = false\n\t    });       \n\t};\n\t$scope.countIndicatorsWeight = function(){\n\n\t\t$scope.totalIndicatorsWeight = 100;\n\t\t$scope.indicator.forEach(function(program){\n\t\t\t$scope.totalIndicatorsWeight -= program.weight;\n\t\t});\n\t}\n\t$scope.loadIndicatorForm = function(program){\n\n\t\t$scope.programFormAux = false;\n\t\t$scope.totalIndicatorsWeightEdit = $scope.totalIndicatorsWeight + program.weight; \n\t\t$scope.programFormAux = program;\n\t\tangular.copy(program,$scope.indicatorForm);\n\t\t$scope.createMessagePrograms = false;\n\t\t$scope.createSuccessPrograms = false;\t\t\n\t\t$scope.selectedTabPrograms = 1\n\t\t$scope.detectChangesProgram = false;\n\n\t}\n\t$scope.cancelEditIndicator = function(select){\n\n\t\t$scope.indicatorsNoContentMsg = $scope.indicatorNoContentMsgFun($scope.indicator,'A',select)\n\t\t$scope.indicatorForm = {\n\t\t\tname: '',\n\t\t\tgoal: '',\n\t\t\tweight: 0\n\t\t}\n\t\t$scope.selectedTabPrograms = 0;\n\t\tdelete $scope.detectChangesProgram;\n\t\t$scope.createMessagePrograms = false;\n\t\t$scope.createSuccessPrograms = false;\n\t}\n\t$scope.editIndicator = function(areaSelect){\n\n\t\t$scope.waitCreateProgram = true;\n\t\t$scope.createMessagePrograms = false;\n\t\t$scope.createSuccessPrograms = false;\n\t    \n\t    //peticion al servidor usando http\n\t    $http.post('editIndicator', $scope.indicatorForm)\n\t    .success(function(data)\n\t    {\t\n\t    \t\n\t    \tif(data['error']){\n\t    \t\t$scope.createMessagePrograms = [data['error']]\n\t\t\t}else if(data['success']){\n\t\t\t\t//si se edito el área de este programa,lo elimino de la vista\n\t\t\t\tif($scope.programFormAux.area != $scope.indicatorForm.area){\n\n\t\t\t\t\t$scope.cancelEditIndicator()\n\t\t\t\t\t$scope.indicator.splice($scope.indicator.indexOf($scope.programFormAux), 1);\n\t\t\t\t};\n\t\t\t\t$scope.createMessagePrograms = false;\n\t\t\t\tdelete $scope.detectChangesProgram;\n\t\t\t\tangular.copy($scope.indicatorForm,$scope.indicator[$scope.indicator.indexOf($scope.programFormAux)]);\n\t\t\t\t$scope.countProgramsWeight();\n\t\t\t\t$scope.indicatorsNoContentMsg = $scope.indicatorNoContentMsgFun($scope.indicator,'A',areaSelect);\n\t\t\t\t$scope.createSuccessPrograms = \"El indicador se edito con Exito!\";    \t\t\t\n\t\t\t}\n\n\t\t\t$scope.waitCreateProgram = false\n\n\t    })\n\t    .error(function(data)\n\t    {\n\t    \t$scope.createSuccessPrograms = false\n\t    \t$scope.createMessagePrograms = [];\n\t\t\tfor(var m in data) {\n\t\t\t   $scope.createMessagePrograms.push(data[m][0]);\n\t\t\t}\n\t\t\t\n\t    \t$scope.waitCreateProgram = false\n\t    });             \n\t    \n\t};\n\t$scope.confirmDeleteIndicator = function(program){\n\n\t\t$scope.waitConfirmDeleteProgram = program;\n\t\t$scope.popupTextProgram= 'Para eliminar por favor ingrese su password:';\n\t\tprogram.deletePassword = ''\n\n\t};\n\t//funcion que envia la peticion para eliminar una dependencia \n\t$scope.deleteIndicator = function(program){\n\n\t\t$scope.waitDeleteProgram = true;\n\t    //peticion al servidor usando http\n\t    $http.post('deleteIndicator', program)\n\t    .success(function(data)\n\t    {\t\n\t    \t\n\t    \tif(data['error']){\n\t    \t\tprogram.deletePassword = ''\n\t    \t\t$scope.popupTextProgram= data['error'];\n\t\t\t}else if(data['reassign']){\n\t\t\t\t$scope.programsAux = [];\n\t\t\t\tangular.copy($scope.indicator,$scope.programsAux); \n\t\t\t\t$scope.programsAux.splice($scope.indicator.indexOf(program), 1);\n\t    \t\t$scope.popupTextProgram = data['reassign']\n\t    \t\t$scope.reassignProjects= true;\n\t\t\t}else if(data['success']){\n\t\t\t\t$scope.reassignProjects= false;\n\t\t\t\t$scope.indicator.splice($scope.indicator.indexOf(program), 1);\n\t\t\t}\n\t\t\t\n\t\t\t$scope.waitDeleteProgram = false;\n\t\t\t$scope.countIndicatorsWeight();\n\n\n\t    })\n\t    .error(function(data)\n\t    {\n\t    \t$location.reload();\t    \t\n\t    });             \n\t    \n\t}; \n\n\n\n\t// *****************************************************************************\n\t// Indicadores de producto\n\t// *****************************************************************************\n\t$scope.productsNoContentMsg = 'Por favor seleccione un proyecto'\n\t$scope.selectedTabProducts = 0;\n\n\t$scope.productForm = {\n\n\t\tname: '',\n\t\tdescription: '',\n\t\tweight: 0,\n\t\tdependencename:'',\n\t\tprogram:'',\n\t\tbudget:'',\n\t\tyear1:'',\n\t\tyear2:'',\n\t\tyear3:'',\n\t\tyear4:'',\n\t}\n\n\t$http.get('viewProjects').success(function(data)\n    {\n    \t$scope.productsPrograms = data;\n\t});\n\n\t$scope.products = []\n\n\t$scope.countProductsWeight = function(){\n\n\t\t$scope.totalProductsWeight = 100;\n\t\t$scope.products.forEach(function(product){\n\t\t\t$scope.totalProductsWeight -= product.weight;\n\t\t});\n \t}\n\n\t//funcion que carga los programas para crear un proyecto.\n\t$scope.productsLoadPrograms = function(program){\n\t\tprogram = angular.element('#typeHeadProducts').val()\n\t\tif (program == '' || program == undefined || !program){\n\n\t\t\treturn\n\t\t};\n\t\t$scope.waitLoadPrograms = true;\n\t    //peticion al servidor usando http\n\t  \t$http.post('viewProgramForName', {'name': program})\n\t    .success(function(data)\n\t    {\t\n\t\t\t$scope.waitLoadPrograms = false;\n\t\t\t/*return data.map(function(item){\n\t\t        return item;\n\t        });*/\n\t        $scope.productsPrograms = data;\t    \t\n\t\t\t$scope.countProgramsWeight();\n\n\n\t    })\n\t    .error(function(data)\n\t    {\n\t    \t//return data;\n\t    \t$scope.waitLoadPrograms = false;\n\t    \t$scope.productsPrograms = $scope.productsPrograms;\n\t    });             \n        \n\t};\n\n\t//funcion que carga los programas de el area para editar un proyecto.\n\t$scope.productsLoadProgramsForArea = function(search){\n\t\tsearch = angular.element('#typeHeadPrograms').val();\n\t\tprogram = $scope.productsProgramSelected;\n\t\t$scope.detectChangesProduct = true\n\n\t\tif (program == '' || program == undefined || !program || search == '' || search == undefined || !search){\n\n\t\t\treturn\n\t\t};\n\t    //peticion al servidor usando http\n\t  \t$http.post('viewProgramForNameInArea', {'area': program.area,'search': search})\n\t    .success(function(data)\n\t    {\t\n\t\t\t/*return data.map(function(item){\n\t\t        return item;\n\t        });*/\n\t        $scope.productsProgramsInArea = data;\t    \t\n\t\t\t$scope.countProgramsWeight();\n\n\n\t    })\n\t    .error(function(data)\n\t    {\n\t    \t//return data;\n\t    \t$scope.waitLoadPrograms = false;\n\t    \t$scope.productsPrograms = $scope.productsPrograms;\n\t    });             \n        \n\t};\n\n\n\t//funcion que muestra el mensaje en los formularios\n\t$scope.productsNoContentMsgFun = function(data,select){\n\n\t\t\t$scope.countProductsWeight();\n\t\t\tif (data.length <= 0) {\n\t\t\t\treturn 'En: ' + select.name + ' No hay ningun proyecto indicador'\n\t\t\t}else if ($scope.totalProductsWeight == 0) {\n\t\t\t\treturn 'Ya completo el 100% del proyecto: \"' + select.name +'\"'\n\t\t\t}else{\n\n\t\t\t\treturn null\n\t\t\t};\n\n\t\t\tif (data == null) {\n\t\t\t\treturn 'Por favor seleccione una línea';\n\t\t\t}else if (!$scope.programsLineSelected){\n\t\t\t\treturn 'Por favor seleccione una área';\n\n\t\t\t};\n\n \t}\n\n\t$scope.selectProduct = function(programSelected) {\n\t\t$scope.cancelEditProduct(programSelected);\n\t\t$scope.productsProgramSelected = programSelected;\n       \t$scope.totalProductsWeight = 100;\n \t\t\n \t\tif (!programSelected){\n \t\t\t$scope.productsNoContentMsg = $scope.productsNoContentMsgFun(null,programSelected);\n \t\t\t$scope.products = [];\n \t\t\treturn\n \t\t};\n \t\t//$scope.cancelEditProject();\n \t\t$scope.waitLoadProducts = true;\n\n\t\t$http.post('viewProductIndicador', {'project': programSelected.id})\n\t    .success(function(data)\n\t    {\t\n\t    \t\n\t    \tif(data['error']){\n\n\t\t\t\t$location.reload();\n\t\t\t}else{\n\t\t\t\t$scope.products= data\n\t\t\t\t$scope.productsNoContentMsg = $scope.productsNoContentMsgFun(data,programSelected);\n\t\t\t\t// $http.post('viewProgramForNameInArea',{'area': programSelected.id,'search': ' '}).success(function(data)\n\t\t\t //    {\n\t\t\t //    \t$scope.productsProgramsInArea = data;\n\t\t\t //    \tconsole.log(data);\n\t\t\t\t// });\n\t\t\t}\n\n    \t\t$scope.countProductsWeight();\n\t\t\t$scope.waitLoadProducts = false;\n\n\t    })\n\t    .error(function(data)\n\t    {\n\t    \t$state.go('home.config');\n\n\t    });\t    \n   \t};\n\n   \t//cancela la edicion de un proyecto\n\t$scope.cancelEditProduct = function(select){\n\n\t\t$scope.productsNoContentMsg = $scope.productsNoContentMsgFun($scope.products,select)\n\t\t$scope.productForm = {\n\t\t\tname: '',\n\t\t\tgoal: '',\n\t\t\tweight: 0,\n\t\t}\n\t\t$scope.selectedTabProducts = 0;\n\t\tdelete $scope.detectChangesProduct;\n\t\t$scope.createMessageProducts = false;\n\t\t$scope.createSuccessProducts = false;\n\t}\n\n   \t//cargar el formulario de edicion de proyecto\n\t$scope.loadProductForm = function(product){\n\t\tconsole.log(product)\n\t\t$scope.productFormAux = false;\n\t\t$scope.detectChangesProduct = false;\n\t\t$scope.countProductsWeight();\n\t\t$scope.totalProductsWeightEdit = $scope.totalProductsWeight + product.weight; \n\t\t$scope.productFormAux = product;\n\t\tangular.copy(product,$scope.productForm);\n\t\t/*$scope.productsProgramsInArea.forEach(function(item) {\n\t\t    if (item.id == $scope.productsProgramSelected.id) {\n\t\t   \t\t$scope.productForm.programName = item.name\n\t\t    };\n\t\t});*/\n\t\t$scope.createMessageProducts = false;\n\t\t$scope.createSuccessProducts = false;\t\t\n\t\t$scope.selectedTabProducts = 1\n\n\t} \n\n\n\t//funcion que envia la peticion para edita una dependencia\n\t$scope.createProducts = function(programSelect){\n\n\t\t$scope.waitCreateProduct = true;\n\t\t$scope.createMessageProducts = false;\n\t\t$scope.createSuccessProducts = false;\n\t\t$scope.productForm.project = programSelect.id;\n\t\tconsole.log($scope.productForm);\n        \n        //peticion al servidor usando http\n        $http.post('createIndicatorProduct', $scope.productForm)\n        .success(function(data)\n        {\t\n        \t\n        \tif(data['error']){\n        \t\t$scope.createMessageProducts = [data['error']]\n    \t\t}else if(data['success']){\n    \t\t\t\n    \t\t\t$scope.createMessageProducts = false;\n    \t\t\tdelete $scope.detectChangesProduct;\n    \t\t\t$scope.products.push(data['success']);\n    \t\t\t$scope.countProductsWeight();\n    \t\t\t$scope.productsNoContentMsg = $scope.productsNoContentMsgFun($scope.products,programSelect);\n    \t\t\t$scope.productForm = {\n\t\t\t\t\tname: '',\n\t\t\t\t\tgoal: '',\n\t\t\t\t\tweight: 0,\n\t\t\t\t}\n    \t\t\t$scope.createSuccessProducts = \"El Indicador se creo con Exito!\";    \t\t\t\n    \t\t}\n\n    \t\t$scope.waitCreateProduct = false\n\n        })\n        .error(function(data)\n        {\n        \t$scope.createSuccessProducts = false\n        \t$scope.createMessageProducts = [];\n\t\t\tfor(var m in data) {\n\t\t\t   $scope.createMessageProducts.push(data[m][0]);\n\t\t\t}\n\t\t\t\n        \t$scope.waitCreateProduct = false\n        });             \n        \n\t}; \n\n\t//funcion que envia la peticion para edita una dependencia\n\t$scope.editProducts = function(productSelect){\n\n\t\t$scope.waitCreateProduct = true;\n\t\t$scope.createMessageProducts = false;\n\t\t$scope.createSuccessProducts = false;\n        \n        //peticion al servidor usando http\n        $http.post('editIndicatorProduct', $scope.productForm)\n        .success(function(data)\n        {\t\n        \t\n        \tif(data['error']){\n        \t\t$scope.createMessageProducts = [data['error']]\n    \t\t}else if(data['success']){\n    \t\t\t//si se edito el área de este Proyecto,lo elimino de la vista\n    \t\t\tconsole.log($scope.productFormAux,$scope.productForm);\n    \t\t\tif($scope.productFormAux.program != $scope.productForm.program){\n\n    \t\t\t\t$scope.cancelEditProduct()\n    \t\t\t\t$scope.products.splice($scope.products.indexOf($scope.productFormAux), 1);\n    \t\t\t};\n    \t\t\t$scope.createMessageProducts = false;\n    \t\t\tdelete $scope.detectChangesProduct;\n    \t\t\tangular.copy($scope.productForm,$scope.products[$scope.products.indexOf($scope.productFormAux)]);\n    \t\t\t$scope.countProductsWeight();\n    \t\t\t$scope.productsNoContentMsg = $scope.productsNoContentMsgFun($scope.products,productSelect);\n    \t\t\t$scope.createSuccessProducts = \"El Proyecto se edito con Exito!\";    \t\t\t\n    \t\t}\n\n    \t\t$scope.waitCreateProduct = false\n\n        })\n        .error(function(data)\n        {\n        \t$scope.createSuccessProducts = false\n        \t$scope.createMessageProducts = [];\n\t\t\tfor(var m in data) {\n\t\t\t   $scope.createMessageProducts.push(data[m][0]);\n\t\t\t}\n\t\t\t\n        \t$scope.waitCreateProduct = false\n        });             \n        \n\t};\n\t$scope.confirmDeleteProduct = function(product){\n\n\t\t$scope.waitConfirmDeleteProduct = product;\n\t\t$scope.popupTextProduct= 'Para eliminar por favor ingrese su password:';\n\t\tproduct.deletePassword = ''\n\n\t};\n\n\t//funcion que cancela la eliminacion de dependencia\n\t$scope.closeWaitDeleteProduct = function(product){\n\t\t$scope.reassignProjects = false\n\t\t$scope.waitConfirmDeleteProduct = false;\n\t\tproduct.deletePassword = ''\n\n\t};\n\n\n\t//funcion que envia la peticion para eliminar una dependencia \n\t$scope.deleteProduct = function(product){\n\n\t\t$scope.waitDeleteProduct = true;\n\t    //peticion al servidor usando http\n\t    $http.post('deleteIndicatorProduct', product)\n\t    .success(function(data)\n\t    {\t\n\t    \t\n\t    \tif(data['error']){\n\t    \t\tproduct.deletePassword = ''\n\t    \t\t$scope.popupTextproduct= data['error'];\n\t\t\t}else if(data['reassign']){\n    \t\t\t$scope.productsAux = [];\n    \t\t\tangular.copy($scope.products,$scope.productsAux); \n    \t\t\t$scope.productsAux.splice($scope.products.indexOf(product), 1);\n        \t\t$scope.popupTextProduct = data['reassign']\n        \t\t$scope.reassignProjects= true;\n\t\t\t}else if(data['success']){\n\t\t\t\t$scope.reassignProjects= false;\n\t\t\t\t$scope.products.splice($scope.products.indexOf(product), 1);\n\t\t\t}\n\t\t\t\n\t\t\t$scope.waitDeleteProduct = false;\n\t\t\t$scope.countProductsWeight();\n\t\t\tconsole.log($scope.totalProductsWeight)\n\n\n\t    })\n\t    .error(function(data)\n\t    {\n\t    \t$location.reload();\t    \t\n\t    });             \n        \n\t};\n\n\t\n})\n\n\n\n\n.controller('ModalDPlanImgCtrl',function($scope, $modalInstance,devplan,$http,$rootScope){\n\n\t$scope.cancel = function () {\n\t    $modalInstance.dismiss('cancel');\n\t};\n\t$scope.myImage='';\n\t$scope.imageCropResult= '';\n\t$scope.imgFrame = 'rectangle';\n\n\t//funcion que carga la imagen en el formulario de creación\n\t$scope.loadAvatar = function(){\n\t\tdevplan.image = $scope.imageCropResult;\n\t    //peticion al servidor para cargar la informacion de perfil del usuario logueado\n\t    $http.post('editImgDevPlan',devplan)\n\t    .success(function(data)\n\t    {\t\n\t    \t\n\t    \tif(data['error']){\n\t    \t\t$scope.errorMessage = [\"No se pudo completar la operación\"]\n\t\t\t}else{\n\t\t\t\t$modalInstance.close(devplan);\n\t\t\t\t$modalInstance.dismiss('cancel');\n\t\t\t};\n\n\t\t\t$scope.processing = true\n\t    })\n\t    .error(function(data)\n\t    {\t\n\t    \t$scope.errorMessage = [];\n\t\t\tfor(var m in data) {\n\t\t\t   $scope.errorMessage.push(data[m][0]);\n\t\t\t}\n\t    \t$scope.processing = false\n\t    });\n    };\n})\n\n.controller('ModalDeleteCtrl',function($scope, $modalInstance,devplan,$http,$rootScope){\n\n\t$scope.cancel = function () {\n\t    $modalInstance.dismiss('cancel');\n\t};\n\t$scope.myImage='';\n\t$scope.imageCropResult= '';\n\t//funcion que carga la imagen en el formulario de creación\n\t$scope.loadAvatar = function(){\n\t\tdevplan.image = $scope.imageCropResult;\n\t    //peticion al servidor para cargar la informacion de perfil del usuario logueado\n\t    $http.post('editImgDevPlan',devplan)\n\t    .success(function(data)\n\t    {\t\n\t    \t\n\t    \tif(data['error']){\n\t    \t\t$scope.errorMessage = [\"No se pudo completar la operación\"]\n\t\t\t}else{\n\t\t\t\t$modalInstance.close(devplan);\n\t\t\t\t$modalInstance.dismiss('cancel');\n\t\t\t};\n\n\t\t\t$scope.processing = true\n\t    })\n\t    .error(function(data)\n\t    {\t\n\t    \t$scope.errorMessage = [];\n\t\t\tfor(var m in data) {\n\t\t\t   $scope.errorMessage.push(data[m][0]);\n\t\t\t}\n\t    \t$scope.processing = false\n\t    });\n    };\n})\n\n","angular.module(\"Gedeon\")\n.controller('ProjectsCtrl',function($scope,$rootScope,$http,$location,$state,fileUpload,$modal){\n\n\t$rootScope.actualMenu = 'projects';\n\n\t//funcion para acceder a un valor desde la vista cuando el 2waydatabinding falla\n    $rootScope.viewDataBind = function(data){\n\n\t\treturn eval('$scope.'+ data);\n\t\t//return 10;\n\n\t}\n\n\t//funcion para acceder a un valor desde la vista cuando el 2waydatabinding falla\n    $rootScope.changeDataBind = function(data,val){\n\n\t\t\t$scope.$eval(data +' = ' + val);\n\n    \tconsole.log(eval('$scope.'+ data));\n\n\t}\n\n\t// *****************************************************************************\n\t// PROYECTOS\n\t// *****************************************************************************\n\n\t$scope.projectsNoContentMsg = ' No tiene ningun proyecto asignado'\n\t$scope.waitLoadPermissions = true;\n\n\t$scope.projectForm = {\n\n\t\tname: '',\n\t\tdescription: '',\n\t\tweight: 0,\n\t\tdependencename:'',\n\t\tprogram:'',\n\t\tbudget:'',\n\t\tyear1:'',\n\t\tyear2:'',\n\t\tyear3:'',\n\t\tyear4:'',\n\t}\n\n\t$rootScope.$on('$viewContentLoaded',function(event){ \n\t\t$rootScope.rootCheckUrl('loginCheck');\n\t\t$scope.waitLoadPermissions = false;\n    });\n\n\t$scope.userProjects = []\n\n\t\n\t//funcion que carga los programas para crear un proyecto.\n\t$scope.loadProjectsUser = function(){\n\t\t\n\t\t$scope.waitLoadProjects = true;\n\t    //peticion al servidor usando http\n\t  \t$http.get('loadProjectsUser', {})\n\t    .success(function(data)\n\t    {\t\n\t\t\tconsole.log(data);\n\t\t\t$scope.waitLoadProjects = false;\n\t        $scope.userProjects = data;\t    \t\n\t\t\t$scope.countProgramsWeight();\n\n\t\t\tif (actualUser.role==3 || actualUser.role==4) {\n\n\t\t\t\t$scope.projectsNoContentMsg = ' No tiene ningun proyecto asignado'\n\n\t\t\t}else{\n\n\t\t\t\t$scope.projectsNoContentMsg = ' No hay ningun proyecto creado'\n\t\t\t};\n\n\n\t    })\n\t    .error(function(data)\n\t    {\n\t    \t//return data;\n\t    \t$scope.waitLoadProjects = false;\n\t    \t$scope.projectsPrograms = $scope.projectsPrograms;\n\t    });             \n        \n\t};\n\n\t\n\t//funcion que carga los projectos y las dependencias para filtrar.\n\t$scope.loadProjectsDependece = function(){\n\t\t$scope.waitLoadAllProjects = true;\n\n\t    //peticion al servidor usando http\n\t  \t$http.get('viewProjectsDetails', {})\n\t    .success(function(data)\n\t    {\t\n\t\t\t\n\t        $scope.allProjects = data;\t    \t\n\t        $scope.waitLoadAllProjects = false;\n\t        console.log(data);\n\t    })\n\t    .error(function(data)\n\t    {\n\t    \t$scope.waitLoadAllProjects = false;\n\t    \t$scope.projectsPrograms = $scope.projectsPrograms;\n\t    }); \n\n\t    //peticion al servidor usando http\n\t  \t$http.get('viewDependences', {})\n\t    .success(function(data)\n\t    {\t\n\t\t\t\n\t        $scope.dependences = data;\t    \t\n\t        $scope.waitLoadAllProjects = false;\n\t    })\n\t    .error(function(data)\n\t    {\n\t    \t$scope.waitLoadAllProjects = false;\n\t    \t$scope.projectsPrograms = $scope.projectsPrograms;\n\t    });                    \n        \n\t};\n\n\n\t//funcion que muestra el mensaje en los formularios\n\t$scope.projectsNoContentMsgFun = function(data,select){\n\n\t\t\t$scope.countProjectsWeight();\n\t\t\tif (data.length <= 0) {\n\t\t\t\treturn 'En: ' + select.name + ' No hay ningun proyecto creado'\n\t\t\t}else if ($scope.totalProjectsWeight == 0) {\n\t\t\t\treturn 'Ya completo el 100% del programa: \"' + select.name +'\"'\n\t\t\t}else{\n\n\t\t\t\treturn null\n\t\t\t};\n\n\t\t\tif (data == null) {\n\t\t\t\treturn 'Por favor seleccione una línea';\n\t\t\t}else if (!$scope.programsLineSelected){\n\t\t\t\treturn 'Por favor seleccione una área';\n\n\t\t\t};\n\n \t}\n\n\t$scope.selectProject = function(programSelected) {\n\t\t$scope.cancelEditProject(programSelected);\n\t\t$scope.projectsProgramSelected = programSelected;\n       \t$scope.totalProjectsWeight = 100;\n \t\t\n \t\tif (!programSelected){\n \t\t\t$scope.projectsNoContentMsg = $scope.projectsNoContentMsgFun(null,programSelected);\n \t\t\t$scope.projects = [];\n \t\t\treturn\n \t\t};\n \t\t//$scope.cancelEditProject();\n \t\t$scope.waitLoadProjects = true;\n\n\t\t$http.post('viewProject', {'program': programSelected.id})\n\t    .success(function(data)\n\t    {\t\n\t    \t\n\t    \tif(data['error']){\n\n\t\t\t\t$location.reload();\n\t\t\t}else{\n\t\t\t\t$scope.projects= data\n\t\t\t\t$scope.projectsNoContentMsg = $scope.projectsNoContentMsgFun(data,programSelected);\n\t\t\t\t$http.post('viewProgramForNameInArea',{'area': programSelected.id,'search': ' '}).success(function(data)\n\t\t\t    {\n\t\t\t    \t$scope.projectsProgramsInArea = data;\n\t\t\t    \tconsole.log(data);\n\t\t\t\t});\n\t\t\t}\n\n    \t\t$scope.countProjectsWeight();\n\t\t\t$scope.waitLoadProjects = false;\n\n\t    })\n\t    .error(function(data)\n\t    {\n\t    \t$state.go('home.config');\n\n\t    });\t    \n   \t};\n\n   \t//cancela la edicion de un proyecto\n\t$scope.cancelEditProject = function(select){\n\n\t\t$scope.projectsNoContentMsg = $scope.projectsNoContentMsgFun($scope.projects,select)\n\t\t$scope.projectForm = {\n\t\t\tname: '',\n\t\t\tdescription: '',\n\t\t\tweight: 0,\n\t\t\tdependencename:'',\n\t\t\tprogram:'',\n\t\t\tbudget:'',\n\t\t\tyear1:'',\n\t\t\tyear2:'',\n\t\t\tyear3:'',\n\t\t\tyear4:'',\n\t\t}\n\t\t$scope.selectedTabProjects = 0;\n\t\tdelete $scope.detectChangesProject;\n\t\t$scope.createMessageProjects = false;\n\t\t$scope.createSuccessProjects = false;\n\t}\n\n   \t//cargar el formulario de edicion de proyecto\n\t$scope.loadProjectForm = function(project){\n\t\t$scope.projectFormAux = false;\n\t\t$scope.detectChangesProject = false;\n\t\t$scope.countProjectsWeight();\n\t\t$scope.totalProjectsWeightEdit = $scope.totalProjectsWeight + project.weight; \n\t\t$scope.projectFormAux = project;\n\t\tangular.copy(project,$scope.projectForm);\n\t\t/*$scope.projectsProgramsInArea.forEach(function(item) {\n\t\t    if (item.id == $scope.projectsProgramSelected.id) {\n\t\t   \t\t$scope.projectForm.programName = item.name\n\t\t    };\n\t\t});*/\n\t\t$scope.createMessageProjects = false;\n\t\t$scope.createSuccessProjects = false;\t\t\n\t\t$scope.selectedTabProjects = 1\n\n\t} \n\n\n\t//funcion que envia la peticion para edita una dependencia\n\t$scope.createProjects = function(programSelect){\n\n\t\t$scope.waitCreateProject = true;\n\t\t$scope.createMessageProjects = false;\n\t\t$scope.createSuccessProjects = false;\n\t\t$scope.projectForm.program = programSelect.id;\n\t\tconsole.log($scope.projectForm);\n        \n        //peticion al servidor usando http\n        $http.post('createProject', $scope.projectForm)\n        .success(function(data)\n        {\t\n        \t\n        \tif(data['error']){\n        \t\t$scope.createMessageProjects = [data['error']]\n    \t\t}else if(data['success']){\n    \t\t\t\n    \t\t\t$scope.createMessageProjects = false;\n    \t\t\tdelete $scope.detectChangesProject;\n    \t\t\t$scope.projects.push(data['success']);\n    \t\t\t$scope.countProjectsWeight();\n    \t\t\t$scope.projectsNoContentMsg = $scope.projectsNoContentMsgFun($scope.projects,programSelect);\n    \t\t\t$scope.projectForm = {\n\t\t\t\t\tname: '',\n\t\t\t\t\tdescription: '',\n\t\t\t\t\tweight: 0,\n\t\t\t\t\tdependencename:'',\n\t\t\t\t\tprogram:'',\n\t\t\t\t\tbudget:'',\n\t\t\t\t\tyear1:'',\n\t\t\t\t\tyear2:'',\n\t\t\t\t\tyear3:'',\n\t\t\t\t\tyear4:'',\n\t\t\t\t}\n    \t\t\t$scope.createSuccessProjects = \"El Proyecto se edito con Exito!\";    \t\t\t\n    \t\t}\n\n    \t\t$scope.waitCreateProject = false\n\n        })\n        .error(function(data)\n        {\n        \t$scope.createSuccessProjects = false\n        \t$scope.createMessageProjects = [];\n\t\t\tfor(var m in data) {\n\t\t\t   $scope.createMessageProjects.push(data[m][0]);\n\t\t\t}\n\t\t\t\n        \t$scope.waitCreateProject = false\n        });             \n        \n\t}; \n\n\t//funcion que envia la peticion para edita una dependencia\n\t$scope.editProjects = function(projectSelect){\n\n\t\t$scope.waitCreateProject = true;\n\t\t$scope.createMessageProjects = false;\n\t\t$scope.createSuccessProjects = false;\n        \n        //peticion al servidor usando http\n        $http.post('editProject', $scope.projectForm)\n        .success(function(data)\n        {\t\n        \t\n        \tif(data['error']){\n        \t\t$scope.createMessageProjects = [data['error']]\n    \t\t}else if(data['success']){\n    \t\t\t//si se edito el área de este Proyecto,lo elimino de la vista\n    \t\t\tconsole.log($scope.projectFormAux,$scope.projectForm);\n    \t\t\tif($scope.projectFormAux.program != $scope.projectForm.program){\n\n    \t\t\t\t$scope.cancelEditProject()\n    \t\t\t\t$scope.projects.splice($scope.projects.indexOf($scope.projectFormAux), 1);\n    \t\t\t};\n    \t\t\t$scope.createMessageProjects = false;\n    \t\t\tdelete $scope.detectChangesProject;\n    \t\t\tangular.copy($scope.projectForm,$scope.projects[$scope.projects.indexOf($scope.projectFormAux)]);\n    \t\t\t$scope.countProjectsWeight();\n    \t\t\t$scope.projectsNoContentMsg = $scope.projectsNoContentMsgFun($scope.projects,projectSelect);\n    \t\t\t$scope.createSuccessProjects = \"El Proyecto se edito con Exito!\";    \t\t\t\n    \t\t}\n\n    \t\t$scope.waitCreateProject = false\n\n        })\n        .error(function(data)\n        {\n        \t$scope.createSuccessProjects = false\n        \t$scope.createMessageProjects = [];\n\t\t\tfor(var m in data) {\n\t\t\t   $scope.createMessageProjects.push(data[m][0]);\n\t\t\t}\n\t\t\t\n        \t$scope.waitCreateProject = false\n        });             \n        \n\t};\n})\n\n\n\n\n.controller('ModalDPlanImgCtrl',function($scope, $modalInstance,devplan,$http,$rootScope){\n\n\t$scope.cancel = function () {\n\t    $modalInstance.dismiss('cancel');\n\t};\n\t$scope.myImage='';\n\t$scope.imageCropResult= '';\n\t$scope.imgFrame = 'rectangle';\n\n\t//funcion que carga la imagen en el formulario de creación\n\t$scope.loadAvatar = function(){\n\t\tdevplan.image = $scope.imageCropResult;\n\t    //peticion al servidor para cargar la informacion de perfil del usuario logueado\n\t    $http.post('editImgDevPlan',devplan)\n\t    .success(function(data)\n\t    {\t\n\t    \t\n\t    \tif(data['error']){\n\t    \t\t$scope.errorMessage = [\"No se pudo completar la operación\"]\n\t\t\t}else{\n\t\t\t\t$modalInstance.close(devplan);\n\t\t\t\t$modalInstance.dismiss('cancel');\n\t\t\t};\n\n\t\t\t$scope.processing = true\n\t    })\n\t    .error(function(data)\n\t    {\t\n\t    \t$scope.errorMessage = [];\n\t\t\tfor(var m in data) {\n\t\t\t   $scope.errorMessage.push(data[m][0]);\n\t\t\t}\n\t    \t$scope.processing = false\n\t    });\n    };\n})\n\n.controller('ModalDeleteCtrl',function($scope, $modalInstance,devplan,$http,$rootScope){\n\n\t$scope.cancel = function () {\n\t    $modalInstance.dismiss('cancel');\n\t};\n\t$scope.myImage='';\n\t$scope.imageCropResult= '';\n\t//funcion que carga la imagen en el formulario de creación\n\t$scope.loadAvatar = function(){\n\t\tdevplan.image = $scope.imageCropResult;\n\t    //peticion al servidor para cargar la informacion de perfil del usuario logueado\n\t    $http.post('editImgDevPlan',devplan)\n\t    .success(function(data)\n\t    {\t\n\t    \t\n\t    \tif(data['error']){\n\t    \t\t$scope.errorMessage = [\"No se pudo completar la operación\"]\n\t\t\t}else{\n\t\t\t\t$modalInstance.close(devplan);\n\t\t\t\t$modalInstance.dismiss('cancel');\n\t\t\t};\n\n\t\t\t$scope.processing = true\n\t    })\n\t    .error(function(data)\n\t    {\t\n\t    \t$scope.errorMessage = [];\n\t\t\tfor(var m in data) {\n\t\t\t   $scope.errorMessage.push(data[m][0]);\n\t\t\t}\n\t    \t$scope.processing = false\n\t    });\n    };\n})\n\nGedeon.filter('noFractionCurrency',\n    [ '$filter', '$locale', function(filter, locale) {\n      var currencyFilter = filter('currency');\n      var formats = locale.NUMBER_FORMATS;\n      return function(amount, currencySymbol) {\n        var value = currencyFilter(amount, currencySymbol);\n        var sep = value.indexOf(formats.DECIMAL_SEP);\n        if(amount >= 0) { \n          return value.substring(0, sep);\n        }\n        return value.substring(0, sep) + ')';\n      };\n    } ]);\n\nGedeon.filter('loadProjectsfilter', function() {\n  \treturn function(items, search) {\n\t    if (!search) {\n\t      return items;\n\t    }\n\t    console.log(items, search);\n\t    if (!search || '' === search) {\n\t      return items;\n\t    }\n\n\t    return items.filter(function(element, index, array) {\n\t      return element.dependence === search;\n\t    });\n\n  \t};\n});\n\n\n","angular.module(\"Gedeon\")\n.controller('StartCtrl',function($scope,$rootScope,$http,$location){\n\n\t$rootScope.actualMenu = 'start';\n\t$scope.waitEditDevPlan = true;\n\t$scope.devPlanForm = {\n\n\t\timage: '',\n\t\ttitle: '',\n\t\tdescription: ''\n\t}\n\n    //peticion al servidor para cargar la informacion del plan de desarrollo\n    $http.get('viewDevelopmentPlan',[''])\n    .success(function(data)\n    {\t\n    \t\n    \tif(data['error']){\n    \t\t$scope.editDPMessage = [\"No se pudo completar la operación\"]\n\t\t}else{\n\t\t\t$scope.devPlanForm = data;\n\t\t};\n\n\t\t$scope.waitEditDevPlan = false\n    })\n    .error(function(data)\n    {\t\n    \t$scope.editDPMessage = [];\n\t\tfor(var m in data) {\n\t\t   $scope.editDPMessage.push(data[m][0]);\n\t\t}\n    \t$scope.processing = false\n    });\n\t\n\n    \t\n\n\t\n})\n","angular.module(\"Gedeon\")\n.controller('UsersCtrl',function($scope,$rootScope,$http,$location,$modal,fileUpload){\n\n\t$rootScope.actualMenu = 'users';\n\t$scope.scopeCheckUrl = function(){\n\t}\n\n\t//funcion para acceder a un valor desde la vista cuando el 2waydatabinding falla\n    $rootScope.viewDataBind = function(data){\n\n\t\treturn eval('$scope.'+ data);\n\t\t//return 10;\n\n\t}\n\n\t$rootScope.$on('$viewContentLoaded',function(event){ \n\t\t$rootScope.rootCheckUrl('viewUsers');loginCheck\n\t\t//alert('user')\n\t \t//alert('users',event.targetScope)\n    });\n    $scope.loadTags = function(query,select) {\n \t\treturn $http.post('viewProjectForDependence', {'dependence': select ,'project': query})\n    };\n    \n\t$scope.wait = false;\n\t$scope.sessionMessage = [];\n\t$scope.success = false;\n\t$scope.userForm = {\n\n\t\tname: '',\n\t\temail: '',\n\t\ttelephone: '',\n\t\tavatar: 'img/img_profile_users/default-avatar2.jpg',\n\t\tdependence: '',\n\t\trole: '',\n\t\tdependenceid: '',\n\t\troleid: '',\n\t\tpassword: '',\t\n\t\tpassword_confirmation: ''\n\t}\n\n\t$scope.usersRoles = [\n\n\t\t{\n\t\t\tname: 'Administrador',\n\t\t\tid: 1\n\t\t},\n\t\t{\n\t\t\tname: 'Directivo',\n\t\t\tid: 2\n\t\t},\n\t\t{\n\t\t\tname: 'Asesor',\n\t\t\tid: 3\n\t\t},\n\t\t{\n\t\t\tname: 'Responsable de área',\n\t\t\tid: 4\n\t\t},\n\t\t{\n\t\t\tname: 'Operativo',\n\t\t\tid: 5\n\t\t}\n\t]\n\n\t \n\t\n\t$scope.selectedTabUsers = 0\n\n\n    //muetras todos los usuarios creados\n\t$scope.waitUsersLoad = true;\n\t$http.get('viewUsers', [''])\n    .success(function(data)\n    {\t\n    \t\n    \tif(data['error']){\n\n\t\t\t$location.path( \"/home/start\" );\n\n\t\t}else{\n\n\t\t\t$scope.users= data\n\n\t\t}\n\n\t\t$scope.waitUsersLoad = false;\n\n    })\n    .error(function(data)\n    {\n    \t$location.reload();\n    });\n\n    /*cargar las dependencias creadas*/\n    $scope.waitCreate = true\n    $http.get('viewDependences', [''])\n    .success(function(data)\n    {\t\n    \t\n    \tif(data['error']){\n\n\t\t\t$location.path( \"/home/star\" );\n\n\t\t}else{\n\n\t\t\t$scope.dependences= data\n\n\t\t}\n\n\t\t$scope.waitCreate = false;\n\n    })\n    .error(function(data)\n    {\n    \t$location.reload();\n    });\n\n    //oculta los alert de mensajes\n    $scope.dismissAlert = function(){\n\n\t\t$scope.createMessage = false;\n\t\t$scope.createSuccess = false;\t\t\n\n\t}\n\n\t//funcion que crea un nuevo usuario\n\t$scope.createUser = function(){\n\t\t$scope.waitCreate = true;\n\t\t$scope.createUserMessage = null;\n\t\t$scope.createUserSuccess = null;\n        //peticion al servidor usando http\n        $http.post('createUser', $scope.userForm)\n        .success(function(data)\n        {\t\n        \t\n        \tif(data['error']){\n        \t\t$scope.createUserMessage = [data['error']]\n    \t\t}else if(data['success']){\n    \t\t\t$scope.createUserMessage = false;\n    \t\t\t$scope.users.push(data['success']);\n    \t\t\t$scope.createUserSuccess = \"El usuario se creo con Exito!\";\n    \t\t\tangular.copy($scope.userForm,$scope.users[$scope.users.indexOf($scope.userFormAux)])\n    \t\t\t$scope.userForm = {\n\t\t\t\t\tname: '',\n\t\t\t\t\temail: '',\n\t\t\t\t\ttelephone: '',\n\t\t\t\t\tavatar: 'img/img_profile_users/default-avatar2.jpg',\n\t\t\t\t\tpassword: '',\n\t\t\t\t\tdependenceid: '',\n\t\t\t\t\troleid: '',\t\n\t\t\t\t\tpassword_confirmation: ''\n\t\t\t\t}\n    \t\t}\n\n    \t\t$scope.waitCreate = false\n\n        })\n        .error(function(data)\n        {\n        \t$scope.createUserMessage = [];\n\t\t\tfor(var m in data) {\n\t\t\t   $scope.createUserMessage.push(data[m][0]);\n\t\t\t}\n\t\t\t\n        \t$scope.waitCreate = false\n        });       \n\t};\n\n\t//funcion que edita un usuario\n\t$scope.editUserPartial = function(){\n\n\t\t$scope.waitEdit = true;\n\t\t$scope.createUserMessage = false;\n\n        \n        //si el password esta presente envia la peticion a una url diferente\n        if ($scope.userForm.password || $scope.userForm.password_confirmation) {\n\n\t        //peticion al servidor usando http\n\t        $http.post('editUser', $scope.userForm)\n\t        .success(function(data)\n\t        {\t\n\t        \t\n\t        \tif(data['error']){\n\t        \t\t$scope.createUserMessage = [data['error']]\n\t    \t\t}else if(data['success']){\n\t    \t\t\t$scope.createUserMessage = false;\n\t    \t\t\t$scope.detectChanges = false;\n\t    \t\t\tangular.copy(data['success'],$scope.users[$scope.users.indexOf($scope.userFormAux)])\n\t    \t\t\t$scope.createUserSuccess = \"El usuario se edito con Exito!\";\n\t    \t\t\t\n\t    \t\t}\n\n\t    \t\t$scope.waitEdit = false\n\n\t        })\n\t        .error(function(data)\n\t        {\n\t        \t$scope.createUserSuccess = false\n\t        \t$scope.createUserMessage = [];\n\t\t\t\tfor(var m in data) {\n\t\t\t\t   $scope.createUserMessage.push(data[m][0]);\n\t\t\t\t}\n\t\t\t\t\n\t        \t$scope.waitEdit = false\n\t        });             \n        }else{\n\n        \t//peticion al servidor usando http\n\t        $http.post('editUserPartial', $scope.userForm)\n\t        .success(function(data)\n\t        {\t\n\t        \t\n\t        \tif(data['error']){\n\t        \t\t$scope.createUserMessage = [data['error']]\n\t    \t\t}else if(data['success']){\n\t    \t\t\t$scope.createUserMessage = false;\n\t    \t\t\t$scope.detectChanges = false;\n\t    \t\t\tangular.copy(data['success'],$scope.users[$scope.users.indexOf($scope.userFormAux)])\n\t    \t\t\t$scope.createUserSuccess = \"El usuario se edito con Exito!\";\n\t    \t\t\t\n\t    \t\t}\n\n\t    \t\t$scope.waitEdit = false\n\n\t        })\n\t        .error(function(data)\n\t        {\n\t        \t$scope.createUserSuccess = false\n\t        \t$scope.createUserMessage = [];\n\t\t\t\tfor(var m in data) {\n\t\t\t\t   $scope.createUserMessage.push(data[m][0]);\n\t\t\t\t}\n\t\t\t\t\n\t        \t$scope.waitEdit = false\n\t        }); \n\n        };\n\t};\n\n\t$scope.loadUserForm = function(user){\n\n\t\t$scope.editingUser = true\n\t\t$scope.detectChanges = false;\n\t\t$scope.userFormAux = user;\n\t\tangular.copy(user,$scope.userForm);\n\t\t$scope.createUserMessage = false;\n\t\t$scope.createUserSuccess = false;\t\t\n\t\t$scope.selectedTabUsers = 1\n\n\t}\n\n\t$scope.cancelEditUser = function(){\n\n\t\t$scope.userForm = {\n\t\t\tname: '',\n\t\t\temail: '',\n\t\t\ttelephone: '',\n\t\t\tavatar: 'img/img_profile_users/default-avatar2.jpg',\n\t\t\tdependence: '',\n\t\t\trole: '',\n\t\t\tdependenceid: '',\n\t\t\troleid: '',\n\t\t\tpassword: '',\t\n\t\t\tpassword_confirmation: ''\n\t\t}\n\t\t$scope.editingUser = false;\n\t\t$scope.selectedTabUsers = 0;\n\t\t$scope.detectChanges = false;\n\t}\n\n\t//funcion que habilita o deshabilita un usuario\n\t$scope.enabledUser = function(user){\n\n\t    //peticion al servidor usando http\n\t    $http.post('enabledUser', user)\n\t    .success(function(data)\n\t    {\t\n\t    \t\n\t    \tif(data['error']){\n\t    \t\t\n\t\t\t}else if(data['success']){\n\t\t\t\tuser.enabled = !user.enabled;\n\t\t\t\t\n\t\t\t}\n\n\t    })\n\t    .error(function(data)\n\t    {\n\t    \t\n\t    });             \n        \n\t};\n\n\t\n\t//funcion que abre el modal para editar el avatar \n\t$scope.openModal = function(){\n\n\t\tvar modalInstance = $modal.open({\n\t        animation: true,\n\t        templateUrl: 'views/common/modal_edit_avatar.html',\n\t        backdrop: 'static',\n\t        controller: 'ModalAvatarCtrl',\n\t        resolve: {\n\t\t      \tprofile: function () {\n\t\t          return $scope.userForm;\n\t\t        }\n\t        }\n\n     \t});\n\n\n     \t$scope.imageCropResult = null;\n\t    $scope.showImageCropper = true;\n\n\t    $scope.$watch('imageCropResult', function(newVal) {\n\t        if (newVal) {\n\t        }\n\t    });\n\n\t    modalInstance.result.then(function (profile) {\n\t      $scope.profile = profile;\n\t    });\n\n\t\t\n    }; \n\n\n\n\n\t\n})\n.controller('ModalAvatarCtrl',function($scope, $modalInstance,profile,$http,$location,$rootScope){\n\n\t$scope.cancel = function () {\n\t    $modalInstance.dismiss('cancel');\n\t};\n\n\t$scope.myImage='';\n\t$scope.imageCropResult= '';\n\t$scope.imgFrame = 'circle';\n\t$scope.maxWidth = 300;\n\n\t//funcion que carga la imagen en el formulario de creación\n\t$scope.loadAvatar = function(){\n\n\t\tif (!profile.id) {\n\n\t\t\tprofile.avatar = $scope.imageCropResult;\n\t\t\t$modalInstance.dismiss('cancel');\n\t\t}else{\n\n\t\t\tprofile.avatar = $scope.imageCropResult;\n\t\t\t$scope.processing = true\n\t\t    //peticion al servidor para cargar la informacion de perfil del usuario logueado\n\t\t    $http.post('editAvatar',profile)\n\t\t    .success(function(data)\n\t\t    {\t\n\t\t    \t\n\t\t    \tif(data['error']){\n\t\t    \t\t$scope.errorMessage = [\"No se pudo completar la operación\"]\n\t\t\t\t}else{\n\t\t\t\t\t$modalInstance.close(data[0]);\n\t\t\t\t\t$modalInstance.dismiss('cancel');\n\t\t\t\t};\n\n\t\t\t\t$scope.processing = true\n\t\t    })\n\t\t    .error(function(data)\n\t\t    {\t\n\t\t    \t$scope.errorMessage = [];\n\t\t\t\tfor(var m in data) {\n\t\t\t\t   $scope.errorMessage.push(data[m][0]);\n\t\t\t\t}\n\t\t    \t$scope.processing = false\n\t\t    });\n\t\t};\n    };\n\n\t//funcion que edita la imagen de perfil del usuario logueado \n\t$scope.editAvatar = function(){\n\n\t\t$scope.processing = true\n\n\t    //peticion al servidor para cargar la informacion de perfil del usuario logueado\n\t    $http.post('editAvatar',{avatar: $scope.imageCropResult})\n\t    .success(function(data)\n\t    {\t\n\t    \t\n\t    \tif(data['error']){\n\t    \t\t$location.path( \"/login\" );\n\t\t\t}else{\n\t\t\t\t$modalInstance.close(data[0]);\n\t\t\t\t$scope.processing = true\n\t\t\t};\n\n\t    })\n\t    .error(function(data)\n\t    {\t\n\t    \t$scope.errorMessage = [];\n\t\t\tfor(var m in data) {\n\t\t\t   $scope.errorMessage.push(data[m][0]);\n\t\t\t}\n\t    \t$scope.processing = false\n\t    });\n    };\n\n})\n","angular.module(\"Gedeon\")\n.controller('AuditCtrl',function($scope,$rootScope,$http,$location){\n\n\t$rootScope.actualMenu = 'audit';\n\t$scope.scopeCheckUrl = function(){\n\t}\n\n\t//funcion para acceder a un valor desde la vista cuando el 2waydatabinding falla\n    $rootScope.viewDataBind = function(data){\n\n\t\treturn eval('$scope.'+ data);\n\t\t//return 10;\n\n\t}\n\t$rootScope.$on('$viewContentLoaded',function(event){ \n\t\t$rootScope.rootCheckUrl('viewAudits');\n\t\t//alert('user')\n\t \t//alert('users',event.targetScope)\n    });\n    $scope.waitAuditLoad = true;\n    $http.get('viewUsers', [''])\n    .success(function(data)\n    {\t\n    \t\n    \tif(data['error']){\n\n\t\t\t$location.reload();\n\n\t\t}else{\n\n\t\t\t$scope.usersLoad= data\n\n\t\t}\n\n\n    })\n    .error(function(data)\n    {\n    \t$location.reload();\n    });\n    $http.get('viewDependences', [''])\n    .success(function(data)\n    {\t\n    \t\n    \tif(data['error']){\n\n\t\t\t$location.reload();\n\n\t\t}else{\n\n\t\t\t$scope.dependencesLoad= data\n\n\t\t}\n\n\n    })\n    .error(function(data)\n    {\n    \t$location.reload();\n    });\n    $http.get('viewProjects', [''])\n    .success(function(data)\n    {\t\n    \t\n    \tif(data['error']){\n\n\t\t\t$location.reload();\n\n\t\t}else{\n\n\t\t\t$scope.projectsLoad= data\n\n\t\t}\n\n\n    })\n    .error(function(data)\n    {\n    \t$location.reload();\n    });\n    $http.get('viewAudits', [''])\n    .success(function(data)\n    {\t\n    \t\n    \tif(data['error']){\n\n\t\t\t$location.reload();\n\n\t\t}else{\n\n\t\t\t$scope.audits= data\n\n\t\t}\n\n\t\t$scope.waitAuditLoad = false;\n\n    })\n    .error(function(data)\n    {\n    \t$location.reload();\n    });\n    $scope.reset = function(type){\n    \tif(type == 1 && $scope.search.user == null){\n    \t\t$scope.search.user = ''\n    \t}\n    \tif(type == 2 && $scope.search.dependence == null){\n    \t\t$scope.search.dependence = ''\n    \t}\n    \tif(type == 3 && $scope.search.project == null){\n    \t\t$scope.search.project = ''\n    \t}\n    }\n\n})\n","\nGedeon.directive('xngFocus', function ($timeout) {\n    return {\n        link: function(scope, element, attrs) {\n            scope.$watch(attrs.xngFocus, function(newValue){\n                if ( newValue ) {\n                    $timeout(function(){\n                        element.focus();\n                    });\n                }\n            });\n        }\n     };\n});\n\nGedeon.directive(\"fileread\", [function () {\n    return {\n        scope: {\n            fileread: \"=\"\n        },\n        link: function (scope, element, attributes) {\n            element.bind(\"change\", function (changeEvent) {\n                var reader = new FileReader();\n                reader.onload = function (loadEvent) {\n                    scope.$apply(function () {\n                        scope.fileread = loadEvent.target.result;\n                    });\n                }\n                reader.readAsDataURL(changeEvent.target.files[0]);\n            });\n        }\n    }\n}]);\n\n/*Gedeon.directive('fileModel', ['$parse', function ($parse) {\n    return {\n        restrict: 'A',\n        link: function(scope, element, attrs) {\n            var model = $parse(attrs.fileModel);\n            var modelSetter = model.assign;\n            \n            element.bind('change', function(){\n                scope.$apply(function(){\n                    modelSetter(scope, element[0].files[0]);\n                });\n            });\n        }\n    };\n}]);*/\n\n\nGedeon.service('fileUpload', ['$http', function ($http) {\n    this.uploadFileToUrl = function(file){\n        var fd = new FormData();\n        fd.append('file', file);\n        /*$http.post(uploadUrl, fd, {\n            transformRequest: angular.identity,\n            headers: {'Content-Type': undefined}\n        })\n        .success(function(){\n        })\n        .error(function(){\n        });*/\n\n        return(fd)\n    }\n}]);\n","angular.module(\"Gedeon\")\n.controller('HomeCtrl',function($scope,$rootScope,$timeout,$http,$location){\n\n\n\t$scope.projects = [\n\t\t{\n\t\t\tname: 'P1'\n\t\t},\n\t\t{\n\t\t\tname: 'P2'\n\t\t},\n\t\t{\n\t\t\tname: 'P3'\n\t\t}\n\t]\n\n    $scope.$on('$viewContentLoaded',function(event){ \n\n        //$rootScope.loadOK = true\n        //event.targetScope.scopeCheckUrl()\n        //alert('home',event)\n    });\n\n\t$timeout(function(){\n\n\t\t$scope.notificationCount = 2\n    }, 1000)\n\n\t/*$timeout(function(){\n\n\t$scope.notificationCount = false\n\t    }, 5000)*/\n    \n        \n    //$rootScope.check = true;\n    $http.get('loginCheck', [''])\n    .success(function(data)\n    {   \n        \n        if(data['user']){\n            \n            $rootScope.actualUser = data\n        }else{\n\n            $location.path( \"/login\" );\n        }\n\n        $rootScope.check = false;\n        $rootScope.loadOK = true\n\n    })\n    .error(function(data)\n    {\n        $location.path( \"/login\" );\n    });\n\n\n    //cierra la actual sesion\n    $scope.logOut = function () {\n\n    \t$scope.logOut = true\n\n\t\t//peticion al servidor usando http\n        $http.post('logout', [''])\n        .success(function(data)\n        {\t\n        \t\n        \tif(data['error']){\n        \t\t$scope.sessionMessage = data['error']\n    \t\t}else if(data['success']){\n    \t\t\t$location.path( \"/login\" );\n    \t\t\t\n    \t\t}\n\n        })\n        .error(function(data)\n        {\n        \t\n        });\n\t\t\n\t};\n\t\n})\n\n","angular.module(\"Gedeon\")\n.controller('LoginCtrl',function($scope,$rootScope,$http,$location){\n\n\n\t$scope.wait = false;\n\t$scope.sessionMessage = [];\n\t$scope.success = false;\n\t$scope.loginForm = {\n\t\t\n\t\tuser: '',\n\t\tpassword: ''\n\t}\n\n\n\t\n\n\t$scope.check = true;\n\t$http.get('loginCheck', [''])\n    .success(function(data)\n    {\t\n    \t\n    \tif(data['user']){\n\n\t\t\t\n\t\t\t$location.path( \"/home/start\" );\n\n\t\t}else{\n\n\t\t}\n\n\t\t$scope.check = false;\n\n    })\n    .error(function(data)\n    {\n    \tif (data.length>0) {\n\n    \t};\n    \t$scope.sessionMessage = 'Por favor ingrese el Usuario y Contraseña';\n    \t\n    });\n\n    /*$http.get('createUser', [''])\n    .success(function(data)\n    {\t\n    \t\n    \tif(data['session']){\n\t\t\t\n\t\t\t$location.path( \"/login\" );\n\n\t\t}else{\n\n\t\t}\n\n\t\t$scope.check = false;\n\t\tconsole.log(data);\n\n    })\n    .error(function(data)\n    {\n    \t$scope.sessionMessage = 'Por favor ingrese el Usuario y Contraseña';\n    \tconsole.log(data);\n    });*/\n\n    \n\t//funcion que valida el inicio de sesion \n\t$scope.login = function(){\n\n\t\t$scope.wait = true;\n\t\t$scope.sessionMessage = [];\n\n\t\t//validacion del lado del cliente \n\t\tif ($scope.loginForm.user == \"\") {\n\n\t\t\t$scope.sessionMessage.push(\"Por favor ingrese el nombre de usuario\");\n\t\t};\n\n\t\tif ($scope.loginForm.password == \"\") {\n\n\t\t\t$scope.sessionMessage.push(\"Por favor ingrese la clave\");\n\n\t\t};\n\n\t\tif ($scope.sessionMessage.length >= 1){\n\t\t\t$scope.wait = false;\n\t\t\treturn;\n\t\t};\n\n        //peticion al servidor usando http\n        $http.post('login', $scope.loginForm)\n        .success(function(data)\n        {\t\n        \t\n        \tif(data['error']){\n        \t\t$scope.sessionMessage = [data['error']]\n    \t\t}else if(data['name']){\n    \t\t\t$scope.sessionMessage = false\n    \t\t\t$location.path( \"/home/start\" );\n    \t\t}\n\n    \t\t$scope.wait = false\n\t\tconsole.log('success',data);\n\n\n        })\n        .error(function(data)\n        {\n    \tconsole.log('error',data);\n        \t\n        \t$scope.sessionMessage = [];\n\t\t\tfor(var m in data) {\n\t\t\t   $scope.sessionMessage.push(data[m][0]);\n\t\t\t}\n\t\t\t\n        \t$scope.wait = false\n        });       \n\t};\n\n\t\n})\n"]}